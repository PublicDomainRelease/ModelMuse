<?xml version="1.0" encoding="utf-8"?>
<nodeSet>
  <view uin="itlcd0qupomo1mk_v">
    <property name="$defaultDiagram" value="true" />
    <property name="$metaclass" value="Package Diagram" />
    <property name="$name" value="default" />
    <reference referencedUin="delphi:e_class:src:ModelMuse:ModflowWellUnit.TMfWellBoundary">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TMfWellBoundary.GetCellValues(Classes.TList,Classes.TStringList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TMfWellBoundary.ModflowParamItemClass()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TMfWellBoundary.BoundaryCollectionClass()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TMfWellBoundary.AssignCells(ModflowBoundaryUnit.TCustomBoundaryStorage,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TMfWellBoundary.InvalidateDisplay()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TMfWellBoundary.GetCellListValues(Classes.TList,Classes.TStringList)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ModflowWellUnit.@unitclass">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ModflowWellUnit.PumpingRatePosition" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ModflowWellUnit.TWellRecord">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWellRecord.Restore(ZLib.TDecompressionStream,Classes.TStringList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWellRecord.Cache(ZLib.TCompressionStream)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ModflowWellUnit.TWellRecord.PumpingRateAnnotation" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ModflowWellUnit.TWellRecord.EndingTime" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ModflowWellUnit.TWellRecord.StartingTime" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ModflowWellUnit.TWellRecord.PumpingRate" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ModflowWellUnit.TWellRecord.Cell" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ModflowWellUnit.TWellStorage">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ModflowWellUnit.TWellStorage.WellArray[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWellStorage.Clear()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWellStorage.Store(ZLib.TCompressionStream)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWellStorage.Restore(ZLib.TDecompressionStream,Classes.TStringList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWellStorage.GetWellArray()" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ModflowWellUnit.TWellStorage.FWellArray" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ModflowWellUnit.TWellItem">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWellItem.GetBoundaryFormula(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWellItem.RemoveFormulaObjects()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWellItem.GetPropertyObserver(System.Object,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWellItem.CreateFormulaObjects()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWellItem.AssignObserverEvents(Classes.TCollection)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWellItem.GetPumpingRate()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWellItem.SetPumpingRate(System.String)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ModflowWellUnit.TWellItem.FPumpingRate" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ModflowWellUnit.TWellItem.PumpingRate[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWellItem.Assign(Classes.TPersistent)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWellItem.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWellItem.BoundaryFormulaCount()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWellItem.InvalidateModel()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWellItem.IsSame(OrderedCollectionUnit.TOrderedItem)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWellItem.SetBoundaryFormula(System.Int32,System.String)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ModflowWellUnit.TWellCollection">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWellCollection.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWellCollection.Create(ModflowBoundaryUnit.TModflowBoundary,System.Object,System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWellCollection.AssignCellList(RbwParser.TExpression,System.Object,ModflowBoundaryUnit.TCustomBoundaryStorage,System.Int32,Classes.TList,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWellCollection.AssignCellLocation(ModflowBoundaryUnit.TCustomBoundaryStorage,System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWellCollection.InvalidateModel()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWellCollection.SetBoundaryStartAndEndTime(System.Int32,ModflowBoundaryUnit.TCustomModflowBoundaryItem,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWellCollection.ItemClass()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWellCollection.AddSpecificBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWellCollection.AdjustedFormula(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWellCollection.InvalidatePumpingRateData(System.Object)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ModflowWellUnit.TWellCollection.FPumpingRateData" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ModflowWellUnit.TWellParamItem">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWellParamItem.BoundaryClass()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ModflowWellUnit.TWell_Cell">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ModflowWellUnit.TWell_Cell.PumpingRate[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWell_Cell.GetSection()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWell_Cell.Restore(ZLib.TDecompressionStream,Classes.TStringList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWell_Cell.Cache(ZLib.TCompressionStream)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWell_Cell.GetIntegerAnnotation(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWell_Cell.GetRealAnnotation(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWell_Cell.GetRealValue(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWell_Cell.GetIntegerValue(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWell_Cell.GetRow()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWell_Cell.GetLayer()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWell_Cell.GetColumn()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWell_Cell.GetPumpingRateAnnotation()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowWellUnit.TWell_Cell.GetPumpingRate()" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ModflowWellUnit.TWell_Cell.StressPeriod" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ModflowWellUnit.TWell_Cell.Values" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ModflowWellUnit.TWell_Cell.PumpingRateAnnotation[]" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ModflowWellUnit.TWell_Cell.Values" />
    </reference>
  </view>
</nodeSet>