<?xml version="1.0" encoding="utf-8"?>
<nodeSet>
  <view uin="uklg2nkwp2r1fjj_v">
    <property name="$defaultDiagram" value="true" />
    <property name="$metaclass" value="Package Diagram" />
    <property name="$name" value="default" />
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TSpecifiedHeadBoundary">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TSpecifiedHeadBoundary.Head[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TSpecifiedHeadBoundary.AssociatedSolution[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TSpecifiedHeadBoundary.SolutionType[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TSpecifiedHeadBoundary.Create(ScreenObjectUnit.TScreenObject,Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TSpecifiedHeadBoundary.Assign(Classes.TPersistent)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TSpecifiedHeadBoundary.Loaded()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TSpecifiedHeadBoundary.SetSolutionType(ScreenObjectUnit.TSolutionType)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TSpecifiedHeadBoundary.FSolutionType" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TSpecifiedHeadBoundary.FSolutionType" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:ScreenObjectUnit.TSpecifiedHeadBoundary:ScreenObjectUnit.TCustomInterpolatedBoundary" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TSpecifiedSolutionBoundary">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TSpecifiedSolutionBoundary.Solution[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TSpecifiedSolutionBoundary.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TSpecifiedSolutionBoundary.Create(ScreenObjectUnit.TScreenObject,Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TSpecifiedSolutionBoundary.Clear()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TSpecifiedSolutionBoundary.Assign(Classes.TPersistent)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TSpecifiedSolutionBoundary.UpdateFormulaExpression()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TSpecifiedSolutionBoundary.UpdateMixtureExpression()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TSpecifiedSolutionBoundary.SetScreenObject(ScreenObjectUnit.TScreenObject)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TSpecifiedSolutionBoundary.SetSolution(ScreenObjectUnit.TIntegerPhastBoundaries)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TSpecifiedSolutionBoundary.FSolution" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TSpecifiedSolutionBoundary.FSolution" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:ScreenObjectUnit.TSpecifiedSolutionBoundary:ScreenObjectUnit.TCustomPhastBoundary" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TWellInterval">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TWellInterval.SecondElevation[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TWellInterval.FirstElevation[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TWellInterval.Assign(Classes.TPersistent)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TWellInterval.InvalidateModel()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TWellInterval.SetSecondElevation(System.Double)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TWellInterval.SetFirstElevation(System.Double)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TWellInterval.FSecondElevation" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TWellInterval.FFirstElevation" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TWellIntervals">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TWellIntervals.ScreenObject[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TWellIntervals.Create(ScreenObjectUnit.TScreenObject,Classes.TComponent)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TWellIntervals.FScreenObject" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TWellIntervals.FScreenObject" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TWellBoundary">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TWellBoundary.InjectionOrPumpingRate[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TWellBoundary.WellElevationFormat[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TWellBoundary.LandSurfaceDatum[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TWellBoundary.Intervals[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TWellBoundary.Diameter[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TWellBoundary.Description[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TWellBoundary.AllocateByPressureAndMobility[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TWellBoundary.PartialAssign(Classes.TPersistent)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TWellBoundary.IsBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TWellBoundary.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TWellBoundary.Create(ScreenObjectUnit.TScreenObject,Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TWellBoundary.Clear()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TWellBoundary.Assign(Classes.TPersistent)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TWellBoundary.SetWellElevationFormat(GoPhastTypes.TWellElevationFormat)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TWellBoundary.SetLandSurfaceDatum(System.Double)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TWellBoundary.SetIntervals(ScreenObjectUnit.TWellIntervals)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TWellBoundary.SetDiameter(System.Double)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TWellBoundary.SetDescription(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TWellBoundary.SetAllocateByPressureAndMobility(System.Boolean)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TWellBoundary.FWellElevationFormat" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TWellBoundary.FLandSurfaceDatum" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TWellBoundary.FIntervals" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TWellBoundary.FDiameter" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TWellBoundary.FDescription" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TWellBoundary.FAllocateByPressureAndMobility" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:ScreenObjectUnit.TWellBoundary:ScreenObjectUnit.TCustomInterpolatedBoundary" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TWellBoundary.FIntervals" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TIntegerItem">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TIntegerItem.Value[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TIntegerItem.Assign(Classes.TPersistent)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TIntegerItem.FValue" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TIntegerCollection">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TIntegerCollection.Create(Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TIntegerCollection.SetValue(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TIntegerCollection.GetValue(System.Int32)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TIntegerCollection.Values[System.Int32]" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.ModflowMnw2Boundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.ModflowGage[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.ModflowHfbBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.ModflowHeadObservations[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.ModflowUzfBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.ModflowSfrBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.ModflowLakBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.ModflowResBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.ModflowEtsBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.ModflowEvtBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.ModflowRchBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.ModflowDrtBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.ModflowDrnBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.ModflowRivBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.ModflowWellBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.ModflowGhbBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.ModflowChdBoundary[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.Destroy()" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.FModflowMnw2Boundary" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.FModflowGage" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.FModflowHfbBoundary" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.FModflowHeadObservations" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.FModflowUzfBoundary" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.FModflowWellBoundary" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.FModflowSfrBoundary" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.FModflowRivBoundary" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.FModflowResBoundary" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.FModflowRchBoundary" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.FModflowLakBoundary" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.FModflowGhbBoundary" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.FModflowDrtBoundary" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.FModflowDrnBoundary" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.FModflowEvtBoundary" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.FModflowEtsBoundary" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TModflowBoundaries.FModflowChdBoundary" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TScreenObject">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.ModpathParticles[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.IFACE[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.ImportedValues[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.ImportedLowerSectionElevations[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.ImportedHigherSectionElevations[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.ImportedSectionElevations[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.SectionStarts[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.ModflowMnw2Boundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.ModflowHfbBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.ModflowStreamGage[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.ModflowHeadObservations[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.ModflowUzfBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.ModflowSfrBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.ModflowLakBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.ModflowResBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.ModflowEtsBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.ModflowEvtBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.ModflowRchBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.ModflowDrtBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.ModflowDrnBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.ModflowRivBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.ModflowWellBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.ModflowGhbBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.ModflowChdBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.WellBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.SpecifiedSolutionBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.SpecifiedHeadBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.RiverBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.LeakyBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.InterpValues[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.FluxBoundary[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.Visible[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.ViewDirection[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetPropertiesOfIntersectedCells[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetValuesOfIntersectedCells[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetPropertiesOfEnclosedCells[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetValuesOfEnclosedCells[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetPropertiesByInterpolation[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetValuesByInterpolation[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.Selected[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.LowerElevationFunction[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.LowerElevationFormula[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.LineColor[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.HigherElevationFunction[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.HigherElevationFormula[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.FillScreenObject[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.FillContour[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.FillColor[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.EvaluatedAt[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.ElevationFunction[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.ElevationFormula[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.ElevationCount[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.ColorLine[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.CellSizeUsed[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.CellSize[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.UpdateCellCache(ScreenObjectUnit.TCellAssignmentList,GoPhastTypes.TEvaluatedAt,GoPhastTypes.TDataSetOrientation,GoPhastTypes.TAssignmentLocation)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.RestoreCellsFromCache(ScreenObjectUnit.TCellAssignmentList,GoPhastTypes.TEvaluatedAt,GoPhastTypes.TDataSetOrientation,GoPhastTypes.TAssignmentLocation,System.String,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.ReverseDirection()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.UpdateImportedValues(DataSetUnit.TDataArray)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.CurrentValues[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.UpdateModflowTimes(RealListUnit.TRealList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SingleCellLocation()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetMfBoundary(OrderedCollectionUnit.TParameterType)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.IsAnyPointCloser(FastGEO.TPoint2D,ref@System.Real,out@FastGEO.TPoint2D,System.Real)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.ValidName(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.UpdateScreenObjectWithName(System.String,GoPhastTypes.TViewDirection,out@UndoItems.TCustomUndo,System.Boolean)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.SelectLines[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.SelectedVertices[System.Int32]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.SelectedVertexCount[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SelectEdge(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.Select(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.Segments[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.ScreenObjectLength()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.ScreenObjectArea()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.ResetSubscriptions()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.ResetDataSetSubscriptions()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.ResetBoundaryDataSetSubscriptions()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.RemoveDataSet(DataSetUnit.TDataArray)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.Points[System.Int32]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.ObjectSectionIntersectLength(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.ObjectIntersectLength(System.Int32,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.ObjectIntersectArea(System.Int32,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.Model[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.MinY[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.MinX[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.Methods()" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.MaxY[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.MaxX[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.IsPointInside(FastGEO.TPoint2D,out@System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.IsPointInside(System.Real,System.Real,out@System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.InvalidateCoordinates()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.Invalidate()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.InsertPoint(System.Int32,FastGEO.TPoint2D)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.InsertDataSet(System.Int32,DataSetUnit.TDataArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.InsertBoundaryDataSet(System.Int32,DataSetUnit.TDataArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.IndexOfPoint(FastGEO.TPoint2D)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.IndexOfDataSet(DataSetUnit.TDataArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.IndexOfBoundaryDataSet(DataSetUnit.TDataArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetBoundaryCollection(PhastDataSets.TPhastTimeList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawSelected(GR32.TBitmap32,GoPhastTypes.TViewDirection)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.Draw3D()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.Draw(GR32.TBitmap32,GoPhastTypes.TViewDirection,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DistanceToScreenObject(FastGEO.TPoint2D,out@FastGEO.TPoint2D,System.Real)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DeletePoint(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DeleteDataSet(System.Int32)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.Deleted[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DeleteBoundaryDataSet(System.Int32)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.DataSetFormulas[System.Int32]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.DataSets[System.Int32]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.DataSetCount[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.DataSetCapacity[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateWithViewDirection(Classes.TComponent,GoPhastTypes.TViewDirection,out@UndoItems.TCustomUndo,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.Create(Classes.TComponent)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.Count[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CopyPoints(ref@GoPhastTypes.TRealPointArray,System.Int32,System.Int32,ref@System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.Closed()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.ClearSelectedVertices()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.ClearPoints()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.ClearDataSets()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.ClearBoundaryDataSets()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.Changed(System.Object)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.Capacity[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.CanvasCoordinates[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.CanInvalidateModel[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.BoundaryTypeUsed()" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.BoundaryDataSetFormulas[System.Int32]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.BoundaryDataSets[System.Int32]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.BoundaryDataSetCount()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.AssignValuesToPhastDataSet(AbstractGridUnit.TCustomGrid,DataSetUnit.TDataArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.AssignValuesToModflowDataSet(AbstractGridUnit.TCustomGrid,DataSetUnit.TDataArray,System.String,GoPhastTypes.TAssignmentLocation)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.Assign(Classes.TPersistent)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.AddPoint(FastGEO.TPoint2D,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.AddDataSet(DataSetUnit.TDataArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.AddBoundaryDataSet(DataSetUnit.TDataArray)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.TopElevation[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.BottomElevation[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.MoveToSelectedPoints(ref@Types.TBooleanDynArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.MoveSelectedPoints(ref@Types.TBooleanDynArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.MoveToPoints(GoPhastTypes.TRealPointArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.MovePoints(ref@GoPhastTypes.TRealPointArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.ResetMixtureSubscriptions()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.ResetBoundaryMixtureSubscriptions()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DeleteEdge(System.Int32)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.NeedToResetSelectedVertexCount[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.AllSectionsClosed()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.MovePointsWhenCreatingScreenObjectByDeletingEdge(System.Int32,ScreenObjectUnit.TScreenObject)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.InvalidateSegments()" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.SectionLength[System.Int32]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.SectionClosed[System.Int32]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.SectionEnd[System.Int32]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.SectionStart[System.Int32]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.SectionCount[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.ModflowDataSetUsed(DataSetUnit.TDataArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateMnw2Boundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateGagBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateHeadObservations()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateHfbBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateUzfBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateWelBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateSfrBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateRivBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateResBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateRchBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateLakBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateGhbBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateEvtBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateEtsBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateDrtBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateDrnBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateChdBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.AssignNumericValueToDataSet(AbstractGridUnit.TCustomGrid,DataSetUnit.TDataArray,System.Double)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.Delegate()" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.BottomElevSubscription[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.TopElevSubscription[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.ElevSubscription[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetModpathCellList(ScreenObjectUnit.TCellAssignmentList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.EndUpdate()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.BeginUpdate()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CacheSegments()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetCellsToAssign(AbstractGridUnit.TCustomGrid,System.String,System.Object,DataSetUnit.TDataArray,ScreenObjectUnit.TCellAssignmentList,GoPhastTypes.TAssignmentLocation)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.IsLower3DElevationAssigned(System.Int32,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.Lower3DElevations[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.IsHigher3DElevationAssigned(System.Int32,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.Higher3DElevations[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.ModflowBoundaries[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.UpdateFormulaExpression()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.UpdateMixtureExpression()" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.MixtureDataSetFormula[System.Int32]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.UpdateVariables(Classes.TStringList,DataSetUnit.TDataArray,System.Int32,System.Int32,System.Int32,RbwParser.TRbwParser)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetViewDirection(GoPhastTypes.TViewDirection)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetUpToDate(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetName(Classes.TComponentName)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetLowerElevationFormula(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetHigherElevationFormula(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetGeometryUpToDate()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetElevationFormula(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.RotatePoints(AbstractGridUnit.TCustomGrid,out@ScreenObjectUnit.TEdgePointArray,out@System.Double,out@System.Double,out@System.Double,out@System.Double)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.OtherIndex(System.Int32,System.Int32,out@System.Int32,out@System.Int32,DataSetUnit.TDataArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.Loaded()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.IsBoundaryTimeDataSetUsed(DataSetUnit.TDataArray,out@System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.Intersection(FastGEO.TPoint2D,FastGEO.TPoint2D,System.Int32,out@FastGEO.TPoint2D)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.IntersectAnnotation(System.String,System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.InitializeVariables(Classes.TStringList,DataSetUnit.TDataArray,RbwParser.TExpression,RbwParser.TRbwParser)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.InitializeExpression(out@RbwParser.TRbwParser,out@System.String,out@RbwParser.TExpression,DataSetUnit.TDataArray,System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetRotatedPoints(out@GoPhastTypes.TRealPointArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.Get1DCompiler()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetCompiler(GoPhastTypes.TDataSetOrientation,GoPhastTypes.TEvaluatedAt)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetCompiler(GoPhastTypes.TDataSetOrientation)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.EncloseAnnotation(System.String,System.Object)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.EdgePoints[System.Int32]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DataSetUsed(DataSetUnit.TDataArray,ref@System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CanAddDataSet(DataSetUnit.TDataArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.BoundaryType()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.AssignValuesToTopPhastDataSet(AbstractGridUnit.TCustomGrid,DataSetUnit.TDataArray,System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.AssignValuesToSidePhastDataSet(AbstractGridUnit.TCustomGrid,DataSetUnit.TDataArray,System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.AssignValuesToFrontPhastDataSet(AbstractGridUnit.TCustomGrid,DataSetUnit.TDataArray,System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.AssignCellValue(Classes.TStringList,DataSetUnit.TDataArray,System.Int32,System.Int32,System.Int32,RbwParser.TRbwParser,System.String,ref@RbwParser.TExpression,System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.PhastBoundaryType()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.InvalidateModel()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.UpdateModel(Classes.TComponent)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FIsUpdating" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.RestoreSubscriptionToList(Classes.TList,System.String,System.Object,Contnrs.TObjectList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.RemoveSubscriptionFromList(System.String,System.Object,Classes.TList,Contnrs.TObjectList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateOrRetrieveFormulaObject(System.Int32,DataSetUnit.TDataArray,ref@FormulaManagerUnit.TFormulaObject)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetFormulaParsers()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateFormulaObjects()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateLowerElevationFormulaObject()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateHigherElevationFormulaObject()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateElevationFormulaObject()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetLowerElevationFormulaParser()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetHigherElevationFormulaParser()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetElevationCompiler()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetElevationFormulaParser()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawPointMarker(GR32.TColor32,GR32.TColor32,GR32.TBitmap32,Types.TPoint,System.Single)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.EvaluateDataArrayExpression(DataSetUnit.TDataArray,ref@RbwParser.TExpression,RbwParser.TRbwParser)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateGpcPolygon()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.UpdateElevationSubscriptions(ref@System.String,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.UpdateLowerElevationSubscriptions(ref@System.String,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.UpdateHigherElevationSubscriptions(ref@System.String,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawSegmentList(GoPhastTypes.TViewDirection,GR32.TBitmap32,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowTopSegmentInsideTopLeft(System.Int32,System.Int32,Classes.TList,System.Int32,ModflowGridUnit.TModflowGrid,ScreenObjectUnit.TModflowDelegate)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowTopSegmentInsideBottomLeft(Classes.TList,System.Int32,ModflowGridUnit.TModflowGrid,ScreenObjectUnit.TModflowDelegate,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowTopSegmentInsideBottomRight(System.Int32,System.Int32,Classes.TList,System.Int32,ModflowGridUnit.TModflowGrid,ScreenObjectUnit.TModflowDelegate)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowTopSegmentInsideTopRight(ModflowGridUnit.TModflowGrid,ScreenObjectUnit.TModflowDelegate,System.Int32,System.Int32,Classes.TList,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowTopSegmentTopLeft(System.Int32,System.Int32,Classes.TList,System.Int32,ModflowGridUnit.TModflowGrid,ScreenObjectUnit.TModflowDelegate)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowTopSegmentBottomLeft(System.Int32,System.Int32,Classes.TList,System.Int32,ModflowGridUnit.TModflowGrid,ScreenObjectUnit.TModflowDelegate)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowTopSegmentAboveLeft(System.Int32,System.Int32,Classes.TList,System.Int32,ModflowGridUnit.TModflowGrid,ScreenObjectUnit.TModflowDelegate)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowTopSegmentAboveRight(System.Int32,System.Int32,Classes.TList,System.Int32,ModflowGridUnit.TModflowGrid,ScreenObjectUnit.TModflowDelegate)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowTopSegmentLeftOutsideAbove(System.Int32,System.Int32,Classes.TList,System.Int32,ModflowGridUnit.TModflowGrid,ScreenObjectUnit.TModflowDelegate)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowTopSegmentAboveOutsideLeft(System.Int32,System.Int32,Classes.TList,System.Int32,ModflowGridUnit.TModflowGrid,ScreenObjectUnit.TModflowDelegate)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowTopSegmentAboveOutsideRight(System.Int32,System.Int32,Classes.TList,System.Int32,ModflowGridUnit.TModflowGrid,ScreenObjectUnit.TModflowDelegate)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowTopSegmentRightOutsideAbove(System.Int32,System.Int32,Classes.TList,System.Int32,ModflowGridUnit.TModflowGrid,ScreenObjectUnit.TModflowDelegate)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowFrontSegmentInsideTopLeft(ref@GoPhastTypes.T2DRealPointArray,System.Int32,System.Int32,System.Int32,ModflowGridUnit.TModflowGrid,ScreenObjectUnit.TModflowDelegate,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowFrontSegmentInsideBottomLeft(GoPhastTypes.T2DRealPointArray,System.Int32,System.Int32,System.Int32,ModflowGridUnit.TModflowGrid,ScreenObjectUnit.TModflowDelegate,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowFrontSegmentInsideBottomRight(System.Int32,System.Int32,System.Int32,ModflowGridUnit.TModflowGrid,ScreenObjectUnit.TModflowDelegate,GoPhastTypes.T2DRealPointArray,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowFrontSegmentInsideTopRight(GoPhastTypes.T2DRealPointArray,System.Int32,System.Int32,System.Int32,ModflowGridUnit.TModflowGrid,ScreenObjectUnit.TModflowDelegate,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowFrontSegmentTopLeft(System.Int32,System.Int32,System.Int32,ScreenObjectUnit.TModflowDelegate,GoPhastTypes.T2DRealPointArray,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowFrontSegmentBottomLeft(ModflowGridUnit.TModflowGrid,ScreenObjectUnit.TModflowDelegate,GoPhastTypes.T2DRealPointArray,System.Int32,System.Int32,System.Int32,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowFrontSegmentAboveLeft(GoPhastTypes.T2DRealPointArray,System.Int32,System.Int32,System.Int32,ScreenObjectUnit.TModflowDelegate,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowFrontSegmentAboveRight(System.Int32,System.Int32,System.Int32,ModflowGridUnit.TModflowGrid,ScreenObjectUnit.TModflowDelegate,GoPhastTypes.T2DRealPointArray,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowFrontSegmentLeftOutsideAbove(GoPhastTypes.T2DRealPointArray,System.Int32,System.Int32,System.Int32,ScreenObjectUnit.TModflowDelegate,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowFrontSegmentAboveOutsideLeft(GoPhastTypes.T2DRealPointArray,System.Int32,System.Int32,System.Int32,ScreenObjectUnit.TModflowDelegate,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowFrontSegmentAboveOutsideRight(ScreenObjectUnit.TModflowDelegate,GoPhastTypes.T2DRealPointArray,System.Int32,System.Int32,System.Int32,ModflowGridUnit.TModflowGrid,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowFrontSegmentRightOutsideAbove(GoPhastTypes.T2DRealPointArray,System.Int32,System.Int32,System.Int32,ModflowGridUnit.TModflowGrid,ScreenObjectUnit.TModflowDelegate,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowSideSegmentInsideTopLeft(ModflowGridUnit.TModflowGrid,ScreenObjectUnit.TModflowDelegate,ref@GoPhastTypes.T2DRealPointArray,System.Int32,System.Int32,System.Int32,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowSideSegmentInsideBottomLeft(GoPhastTypes.T2DRealPointArray,System.Int32,System.Int32,System.Int32,ModflowGridUnit.TModflowGrid,ScreenObjectUnit.TModflowDelegate,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowSideSegmentInsideBottomRight(GoPhastTypes.T2DRealPointArray,System.Int32,System.Int32,System.Int32,ModflowGridUnit.TModflowGrid,ScreenObjectUnit.TModflowDelegate,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowSideSegmentInsideTopRight(System.Int32,ModflowGridUnit.TModflowGrid,ScreenObjectUnit.TModflowDelegate,GoPhastTypes.T2DRealPointArray,System.Int32,System.Int32,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowSideSegmentTopLeft(System.Int32,System.Int32,System.Int32,ScreenObjectUnit.TModflowDelegate,GoPhastTypes.T2DRealPointArray,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowSideSegmentBottomLeft(GoPhastTypes.T2DRealPointArray,System.Int32,System.Int32,System.Int32,ModflowGridUnit.TModflowGrid,ScreenObjectUnit.TModflowDelegate,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowSideSegmentAboveLeft(System.Int32,System.Int32,System.Int32,ScreenObjectUnit.TModflowDelegate,GoPhastTypes.T2DRealPointArray,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowSideSegmentAboveRight(GoPhastTypes.T2DRealPointArray,System.Int32,System.Int32,System.Int32,ModflowGridUnit.TModflowGrid,ScreenObjectUnit.TModflowDelegate,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowSideSegmentLeftOutsideAbove(System.Int32,System.Int32,System.Int32,ScreenObjectUnit.TModflowDelegate,GoPhastTypes.T2DRealPointArray,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowSideSegmentAboveOutsideLeft(GoPhastTypes.T2DRealPointArray,System.Int32,System.Int32,System.Int32,ScreenObjectUnit.TModflowDelegate,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowSideSegmentAboveOutsideRight(System.Int32,System.Int32,System.Int32,ModflowGridUnit.TModflowGrid,ScreenObjectUnit.TModflowDelegate,GoPhastTypes.T2DRealPointArray,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DrawModflowSideSegmentRightOutsideAbove(GoPhastTypes.T2DRealPointArray,ScreenObjectUnit.TModflowDelegate,ModflowGridUnit.TModflowGrid,System.Int32,System.Int32,System.Int32,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateValueArrayStorage(ref@ValueArrayStorageUnit.TValueArrayStorage)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetValueStorageField(ValueArrayStorageUnit.TValueArrayStorage,ref@ValueArrayStorageUnit.TValueArrayStorage)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.Draw2ElevPhast(GoPhastTypes.TViewDirection,GR32.TBitmap32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.Draw2ElevModflow(GoPhastTypes.TViewDirection,GR32.TBitmap32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateBoundaryDataSets()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateBoundaryDataSetSubscriptions()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateBoundaryDataSetFormulas()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateBottomElevationSubscription()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateTopElevationSubscription()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateElevationSubscription()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreatePhastWellBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreatePhastSpecifiedSolutionBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreatePhastSpecifiedHeadBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreatePhastRiverBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreatePhastLeakyBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreatePhastFluxBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DeleteExtraSections()" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.SubPolygons[System.Int32]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObject.SubPolygonCount[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CacheElevationArrays()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetModflowMnw2Boundary(ModflowMnw2Unit.TMnw2Boundary)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetModflowMnw2Boundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.RemoveBoundaryDataArraySubscription(System.Object,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.RestoreBoundaryDataArraySubscription(System.Object,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateOrRetrieveBoundaryFormulaObject(System.Int32,DataSetUnit.TDataArray,ref@FormulaManagerUnit.TFormulaObject)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetLowerElevationFormula()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetHigherElevationFormula()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetElevationFormula()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.RestoreDataArraySubscription(System.Object,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.RemoveDataArraySubscription(System.Object,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.RestoreLowerElevationSubscription(System.Object,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.RestoreHigherElevationSubscription(System.Object,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.RestoreElevationSubscription(System.Object,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.RemoveLowerElevationSubscription(System.Object,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.RemoveHigherElevationSubscription(System.Object,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.RemoveElevationSubscription(System.Object,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.StoreModflowStreamGage()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetModflowStreamGage(ModflowGageUnit.TStreamGage)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetModflowStreamGage()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.StoreImportedValues()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.StoreImportedSectionElevations()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.StoreImportedLowerSectionElevations()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.StoreImportedHigherSectionElevations()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetModpathParticles(ModpathParticleUnit.TParticleStorage)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetIFACE(GoPhastTypes.TIface)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetBottomElevSubscription()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetTopElevSubscription()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetElevSubscription()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetModflowHfbBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetModflowHfbBoundary(ModflowHfbUnit.THfbBoundary)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetImportedValues(ValueArrayStorageUnit.TValueCollection)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.Draw1ElevPhast(GoPhastTypes.TViewDirection,GR32.TBitmap32,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.Assign3DElevationsFromTop(RbwParser.TRbwParser,SparseDataSets.T3DSparseRealArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetImportedSectionElevations()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetImportedLowerSectionElevations()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetImportedHigherSectionElevations()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetImportedLowerSectionElevations(ValueArrayStorageUnit.TValueArrayStorage)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetImportedHigherSectionElevations(ValueArrayStorageUnit.TValueArrayStorage)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetImportedSectionElevations(ValueArrayStorageUnit.TValueArrayStorage)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateSectionStarts()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetSectionStarts()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetSectionStarts(ValueArrayStorageUnit.TValueArrayStorage)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.StoreModflowHeadObservations()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetModflowHeadObservations(ModflowHobUnit.THobBoundary)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetModflowHeadObservations()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.Draw1ElevModflow(GoPhastTypes.TViewDirection,GR32.TBitmap32,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.StoreModflowUzfBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetModflowUzfBoundary(ModflowUzfUnit.TUzfBoundary)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetModflowUzfBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SubPolygonYLimits(System.Object,out@System.Double,out@System.Double)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SubPolygonXLimits(System.Object,out@System.Double,out@System.Double)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetModflowBoundaries()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetWellBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetSpecifiedSolutionBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetSpecifiedHeadBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetRiverBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetLeakyBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetFluxBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetModflowChdBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetModflowGhbBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetModflowWellBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetModflowRivBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetModflowDrnBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetModflowDrtBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetModflowRchBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetModflowEvtBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetModflowEtsBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetModflowResBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetModflowLakBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetModflowSfrBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.StoreModflowSfrBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetModflowSfrBoundary(ModflowSfrUnit.TSfrBoundary)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetSectionLength(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetSectionClosed(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetSectionStart(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetSectionEnd(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetSectionCount()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetSegments()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.AssignTopDataSetValues(AbstractGridUnit.TCustomGrid,RbwParser.TExpression,System.String,RbwParser.TRbwParser,Classes.TStringList,System.Object,DataSetUnit.TDataArray,GoPhastTypes.TAssignmentLocation)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetInterpDistance(PhastDataSets.TInterpValuesItem,ref@System.Double,DataSetUnit.TDataArray,System.Int32,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.StoreModflowLakBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetModflowLakBoundary(ModflowLakUnit.TLakBoundary)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.StoreModflowResBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetModflowResBoundary(ModflowResUnit.TResBoundary)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.StoreModflowEtsBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetModflowEtsBoundary(ModflowEtsUnit.TEtsBoundary)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.StoreModflowEvtBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetModflowEvtBoundary(ModflowEvtUnit.TEvtBoundary)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.StoreModflowRchBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetModflowRchBoundary(ModflowRchUnit.TRchBoundary)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.StoreModflowWellBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.StoreModflowRivBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.StoreModflowGhbBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.StoreModflowDrtBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.StoreModflowDrnBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.StoreModflowChdBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetModflowDrtBoundary(ModflowDrtUnit.TDrtBoundary)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetModflowDrnBoundary(ModflowDrnUnit.TDrnBoundary)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetModflowRivBoundary(ModflowRivUnit.TRivBoundary)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetModflowWellBoundary(ModflowWellUnit.TMfWellBoundary)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetModflowGhbBoundary(ModflowGhbUnit.TGhbBoundary)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.RefreshGui(System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetModflowChdBoundary(ModflowConstantHeadBoundaryUnit.TChdBoundary)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.NotifyGuiOfChange(System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.IAmACurrentScreenObject()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.FrameScreenObject(GoPhastTypes.TViewDirection)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.ZoomBox(GoPhastTypes.TViewDirection)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.TwoDBoundaryFormula()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.ThreeDBoundaryFormula()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.InitializeMixtureExpression(out@RbwParser.TRbwParser,out@System.String,out@RbwParser.TExpression,DataSetUnit.TDataArray,System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetMixtureDataSetFormula(System.Int32,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetMixtureDataSetFormula(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.AssignRealDataWithPhastInterpolation(DataSetUnit.TDataArray,System.Int32,System.Int32,System.Int32,System.String,PhastDataSets.TInterpValuesItem)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.AssignIntegerDataWithPhastInterpolation(DataSetUnit.TDataArray,System.Int32,System.Int32,System.Int32,System.String,PhastDataSets.TInterpValuesItem)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.UpdateLower3DElevations()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.UpdateHigher3DElevations()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.Get_SetValuesOfEnclosedCells()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.ValidCell(System.Int32,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.ValidateIndex(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.UpdateTopSegments(AbstractGridUnit.TCustomGrid,GoPhastTypes.TEvaluatedAt,System.Boolean,ref@ScreenObjectUnit.TEdgePointArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.UpdateSideSegments(AbstractGridUnit.TCustomGrid,GoPhastTypes.TEvaluatedAt)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.UpdateFrontSegments(AbstractGridUnit.TCustomGrid,GoPhastTypes.TEvaluatedAt)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.UpdateBox()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SortPoints(ScreenObjectUnit.TEdgePointArray,out@ScreenObjectUnit.TEdgePointArray,ScreenObjectUnit.TEdgePoint,ScreenObjectUnit.TEdgePoint,System.Int32,System.Real,System.Real)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetVisible(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.Set_SetValuesOfIntersectedCells(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.Set_SetValuesOfEnclosedCells(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.Set_SetValuesByInterpolation(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetSelectedVertices(System.Int32,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetSelected(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetPoints(System.Int32,FastGEO.TPoint2D)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetLineColor(Graphics.TColor)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetFillScreenObject(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetFillColor(Graphics.TColor)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetEvaluatedAt(GoPhastTypes.TEvaluatedAt)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetElevationCount(GoPhastTypes.TElevationCount)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetEdgePoints(System.Int32,ScreenObjectUnit.TEdgePoint)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetDeleted(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetDataSets(System.Int32,DataSetUnit.TDataArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetDataSetFormulas(System.Int32,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetDataSetCapacity(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetCount(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetColorLine(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetCellSizeUsed(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetCellSize(System.Real)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetCapacity(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetBoundaryDataSets(System.Int32,DataSetUnit.TDataArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetBoundaryDataSetFormulas(System.Int32,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.ResetTopElevationFormula(RbwParser.TRbwParser,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.ResetSelectedVertexCount()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.ResetElevationFormula(RbwParser.TRbwParser,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.ResetBottomElevationFormula(RbwParser.TRbwParser,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.PointToPointDist(FastGEO.TPoint2D,FastGEO.TPoint2D,System.Real)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.MinDistPointLine(FastGEO.TPoint2D,FastGEO.TPoint2D,FastGEO.TPoint2D,out@FastGEO.TPoint2D,System.Real)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.InsideBox(System.Real,System.Real)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GrowBy(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.Grow()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetSelectLines()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetSelectedVertices(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetSelectedVertexCount()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetRows(AbstractGridUnit.TCustomGrid,System.Real,System.Real,out@System.Int32,out@System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetRow(AbstractGridUnit.TCustomGrid,System.Real)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetPoints(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetMinY()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetMinX()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetMaxY()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetMaxX()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetLower3DElevations()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetLineColor()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetLayers(AbstractGridUnit.TCustomGrid,System.Real,System.Real,out@System.Int32,out@System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetLayer(AbstractGridUnit.TCustomGrid,System.Real)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetHigher3DElevations()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetGridCellOrElementLimits(System.Int32,System.Int32,System.Int32,out@System.Double,out@System.Double,out@System.Double,out@System.Double)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetFillColor()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetEdgePoints(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetDataSets(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetDataSetFormulas(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetDataSetCount()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetDataSetCapacity()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetCount()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetColumns(AbstractGridUnit.TCustomGrid,System.Real,System.Real,out@System.Int32,out@System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetColumn(AbstractGridUnit.TCustomGrid,System.Real)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetCanvasCoordinates()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetBoundaryDataSets(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetBoundaryDataSetFormulas(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetARow(AbstractGridUnit.TCustomGrid,System.Double)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetAPhastLayer(AbstractGridUnit.TCustomGrid,System.Double)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetACol(AbstractGridUnit.TCustomGrid,System.Double)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.EvaluateSubPolygon(ScreenObjectUnit.TSubPolygon,System.Real,System.Real,ref@System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.Draw2Elev(GR32.TBitmap32,GoPhastTypes.TViewDirection,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.Draw1Elev(GR32.TBitmap32,GoPhastTypes.TViewDirection,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.Draw0Elev(GR32.TBitmap32,GoPhastTypes.TViewDirection,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.ClearSubPolygons()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateSubPolygons()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CalculateCanvasCoordinates()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.AssignLower3DElevations()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.AssignHigher3DElevations()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.Assign3DElevationsFromSide(RbwParser.TRbwParser,SparseDataSets.T3DSparseRealArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.Assign3DElevationsFromFront(RbwParser.TRbwParser,SparseDataSets.T3DSparseRealArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.Assign3DElevations(System.String,SparseDataSets.T3DSparseRealArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.AddPointFromRow(System.Int32,AbstractGridUnit.TCustomGrid,ScreenObjectUnit.TEdgePoint,ScreenObjectUnit.TEdgePoint,ref@ScreenObjectUnit.TEdgePointArray,ref@System.Int32,ScreenObjectUnit.TEdgePosition)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.AddPointFromLayer(System.Int32,AbstractGridUnit.TCustomGrid,ScreenObjectUnit.TEdgePoint,ScreenObjectUnit.TEdgePoint,ref@ScreenObjectUnit.TEdgePointArray,ref@System.Int32,ScreenObjectUnit.TEdgePosition)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.AddPointFromColumn(System.Int32,AbstractGridUnit.TCustomGrid,ScreenObjectUnit.TEdgePoint,ScreenObjectUnit.TEdgePoint,ref@ScreenObjectUnit.TEdgePointArray,ref@System.Int32,ScreenObjectUnit.TEdgePosition)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.StoreWell()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.StoreSpecifiedHead()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetWellBoundary(ScreenObjectUnit.TWellBoundary)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetSpecifiedSolutionBoundary(ScreenObjectUnit.TSpecifiedSolutionBoundary)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetSpecifiedHeadBoundary(ScreenObjectUnit.TSpecifiedHeadBoundary)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.StoreRiver()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.StoreLeaky()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.StoreFlux()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetRiverBoundary(ScreenObjectUnit.TRiverBoundary)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetLeakyBoundary(ScreenObjectUnit.TLeakyBoundary)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetInterpValues(PhastDataSets.TInterpValuesCollection)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.SetFluxBoundary(ScreenObjectUnit.TFluxBoundary)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetSubPolygon(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.GetSubPolygonCount()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.DestroyLastSubPolygon()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.CreateLastSubPolygon()" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FPriorObjectSectionIntersectLengthSection" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FPriorObjectSectionIntersectLengthResult" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FPriorObjectSectionIntersectLengthLayer" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FPriorObjectSectionIntersectLengthRow" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FPriorObjectSectionIntersectLengthCol" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FLowerElevationFormulaObject" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FHigherElevationFormulaObject" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FElevationFormulaObject" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FCachedDataSetIndex" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FPriorObjectIntersectLengthResult" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FPriorObjectIntersectLengthLayer" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FPriorObjectIntersectLengthRow" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FPriorObjectIntersectLengthCol" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FGpcPolygons" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FUpdateCount" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FModpathParticles" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FIFACE" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FListUpToDate" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FGlScreenObjectList" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FGlListCreated" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FCachedClosed" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FIsClosedCached" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FImportedValues" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FImportedLowerSectionElevations" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FImportedHigherSectionElevations" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FCurrentValues" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FImportedSectionElevations" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FSectionStarts" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FModflowBoundaries" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FSubPolygons" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FNeedToResetSelectedVertexCount" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FVisible" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FViewDirection" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FTopElevSubscription" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FTopElevation" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FLastSubPolygon" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FSetValuesOfIntersectedCells" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FSetValuesOfEnclosedCells" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FSetValuesByInterpolation" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FSelectLines" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FSelectedVertices" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FSelectedVertexCount" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FSelected" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FSegments" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FScreenObjectLength" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FScreenObjectArea" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FRecalculateLength" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FRecalculateCoordinates" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FRecalculateBox" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FRecalculateArea" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FPoints" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FNeedToUpdateLine" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FMinY" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FMinX" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FMaxY" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FMaxX" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FLower3DElevationsNeedsUpdating" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FLower3DElevations" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FLineColor" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FHigher3DElevationsNeedsUpdating" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FHigher3DElevations" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FFillScreenObject" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FFillColor" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FEvaluatedAt" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FElevSubscription" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FElevationCount" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FDeleted" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FDataSetSubscriptions" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FDataSets" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FDataSetFormulas" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FCount" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FColorLine" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FCellSizeUsed" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FCellSize" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FCapacity" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FCanvasCoordinates" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FBoundaryDataSetSubscriptions" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FBoundaryDataSets" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FBoundaryDataSetFormulas" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FBottomElevSubscription" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FBottomElevation" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FWellBoundary" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FSpecifiedSolutionBoundary" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FSpecifiedHeadBoundary" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FRiverBoundary" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FLeakyBoundary" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FFluxBoundary" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FMixtureVariables" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FMixtureExpression" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FMixtureCompiler" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FInterpValues" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FDataSetMixtureSubscriptions" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FModel" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FCanInvalidateModel" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.IsOutsideSubPolygonBoxPlusBuffer(FastGEO.TPoint2D,System.Real,System.Real,ScreenObjectUnit.TSubPolygon)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.IsAnyPointInSubPolygonCloser(FastGEO.TPoint2D,ref@System.Real,out@FastGEO.TPoint2D,System.Real,ScreenObjectUnit.TSubPolygon)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObject.IsOutsideBoxPlusBuffer(FastGEO.TPoint2D,System.Real,System.Real)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FDelegateCollection" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FIntervalTree" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObject.FCachedCells" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TScreenObject.FSegments" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TScreenObject.FWellBoundary" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TScreenObject.FSpecifiedSolutionBoundary" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TScreenObject.FSpecifiedHeadBoundary" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TScreenObject.FRiverBoundary" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TScreenObject.FLeakyBoundary" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TScreenObject.FFluxBoundary" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TScreenObject.FDelegateCollection" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TScreenObject.FCachedCells" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TScreenObject.FModflowBoundaries" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TScreenObject.FLastSubPolygon" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TScreenObjectList">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObjectList.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObjectList.Create()" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObjectList.Items[System.Int32]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObjectList.Count[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObjectList.Capacity[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObjectList.Add(ScreenObjectUnit.TScreenObject)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObjectList.SetCapacity(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObjectList.GetCapacity()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObjectList.GetItems(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObjectList.GetCount()" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObjectList.FList" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TCustomDataListItem">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCustomDataListItem.FLastRow" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCustomDataListItem.FLastLay" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCustomDataListItem.FLastCol" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCustomDataListItem.FFirstRow" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCustomDataListItem.FFirstLay" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCustomDataListItem.FFirstCol" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCustomDataListItem.FDataSetName" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomDataListItem.ValueIndex(System.Int32,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCustomDataListItem.LastRow[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCustomDataListItem.LastLay[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCustomDataListItem.LastCol[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCustomDataListItem.FirstRow[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCustomDataListItem.FirstLay[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCustomDataListItem.FirstCol[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCustomDataListItem.DataSetName[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomDataListItem.Assign(Classes.TPersistent)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCustomDataListItem.Length[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomDataListItem.SetValuesLength(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomDataListItem.GetValuesLength()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TRealDataListItem">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TRealDataListItem.Values[System.Int32]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TRealDataListItem.Assign(Classes.TPersistent)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TRealDataListItem.DefineProperties(Classes.TFiler)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TRealDataListItem.WriteValues(Classes.TWriter)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TRealDataListItem.SetValuesLength(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TRealDataListItem.ReadValues(Classes.TReader)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TRealDataListItem.GetValuesLength()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TRealDataListItem.SetValues(System.Int32,System.Double)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TRealDataListItem.GetValues(System.Int32)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TRealDataListItem.FValues" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:ScreenObjectUnit.TRealDataListItem:ScreenObjectUnit.TCustomDataListItem" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TIntegerDataListItem">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TIntegerDataListItem.Values[System.Int32]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TIntegerDataListItem.Assign(Classes.TPersistent)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TIntegerDataListItem.DefineProperties(Classes.TFiler)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TIntegerDataListItem.WriteValues(Classes.TWriter)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TIntegerDataListItem.SetValuesLength(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TIntegerDataListItem.ReadValues(Classes.TReader)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TIntegerDataListItem.GetValuesLength()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TIntegerDataListItem.SetValues(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TIntegerDataListItem.GetValues(System.Int32)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TIntegerDataListItem.FValues" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:ScreenObjectUnit.TIntegerDataListItem:ScreenObjectUnit.TCustomDataListItem" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TDataListCollection">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TDataListCollection.GetItemByName(System.String)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TDataListCollection.ScreenObject[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TDataListCollection.Create(Classes.TCollectionItemClass,ScreenObjectUnit.TScreenObject,Classes.TComponent)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TDataListCollection.PriorIndex" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TDataListCollection.FScreenObject" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TDataListCollection.FScreenObject" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TRealDataListCollection">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TRealDataListCollection.Create(ScreenObjectUnit.TScreenObject,Classes.TComponent)" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:ScreenObjectUnit.TRealDataListCollection:ScreenObjectUnit.TDataListCollection" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TIntegerDataListCollection">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TIntegerDataListCollection.Create(ScreenObjectUnit.TScreenObject,Classes.TComponent)" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:ScreenObjectUnit.TIntegerDataListCollection:ScreenObjectUnit.TDataListCollection" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TScreenObjectClass">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TSelectedVertexItem">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TSelectedVertexItem.NodeSelected[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TSelectedVertexItem.VertexSelected[]" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TSelectedVertexItem.FVertexSelected" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TSelectedVertexCollection">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TSelectedVertexCollection.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TPointItem">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TPointItem.Y[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TPointItem.X[]" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TPointItem.FY" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TPointItem.FX" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TPointCollection">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TPointCollection.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.LowerElevationFunction[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.HigherElevationFormula[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.HigherElevationFunction[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.ElevationFormula[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.ElevationFunction[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.DataSetFormulas[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.DataSetNames[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.Contour[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.ClassTypeName[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.SetScreenObject(ScreenObjectUnit.TScreenObject)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.Create(Classes.TCollection)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.UpdateScreenObject()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.SetClassType(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.GetMixtureFormulas()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.GetLowerElevationFormula()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.GetHigherElevationFormula()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.GetElevationFormula()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.GetDataSetNames()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.GetDataSetFormulas()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.GetClassType()" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.FSelectedVertexCollection" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.FScreenObject" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.FPoints" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.FMixtureFormulas" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.FLowerElevationFormula" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.FHigherElevationFormula" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.FElevationFormula" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.FDataSetFormulas" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.FDataSetNames" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.MixtureFormulas[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.SelectedNodes[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.SelectedVertices[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.ScreenObject[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.Points[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.LowerElevationFormula[]" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.FSelectedVertexCollection" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.FScreenObject" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TScreenObjectItem.FPoints" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TPhastDelegate">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TPhastDelegate.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TPhastDelegate.Create(ScreenObjectUnit.TScreenObject)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TPhastDelegate.InitializeExpression(out@RbwParser.TRbwParser,out@System.String,out@RbwParser.TExpression,DataSetUnit.TDataArray,System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TPhastDelegate.AssignSelectedCells(AbstractGridUnit.TCustomGrid)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TPhastDelegate.GetCellsToAssign(AbstractGridUnit.TCustomGrid,System.String,System.Object,GoPhastTypes.TEvaluatedAt,ScreenObjectUnit.TCellAssignmentList,GoPhastTypes.TAssignmentLocation)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TPhastDelegate.GetTopCellsToAssign(AbstractGridUnit.TCustomGrid,System.String,System.Object,DataSetUnit.TDataArray,ScreenObjectUnit.TCellAssignmentList,GoPhastTypes.TAssignmentLocation)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TPhastDelegate.GetFrontCellsToAssign(AbstractGridUnit.TCustomGrid,System.String,System.Object,DataSetUnit.TDataArray,ScreenObjectUnit.TCellAssignmentList,GoPhastTypes.TAssignmentLocation)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TPhastDelegate.GetSideCellsToAssign(AbstractGridUnit.TCustomGrid,System.String,System.Object,DataSetUnit.TDataArray,ScreenObjectUnit.TCellAssignmentList,GoPhastTypes.TAssignmentLocation)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TPhastDelegate.UpdateSideSegments(AbstractGridUnit.TCustomGrid,GoPhastTypes.TEvaluatedAt)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TPhastDelegate.UpdateFrontSegments(AbstractGridUnit.TCustomGrid,GoPhastTypes.TEvaluatedAt)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TPhastDelegate.OtherIndex(System.Int32,System.Int32,out@System.Int32,out@System.Int32,DataSetUnit.TDataArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TPhastDelegate.IntersectAnnotation(System.String,System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TPhastDelegate.EncloseAnnotation(System.String,System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TPhastDelegate.DataSetUsed(DataSetUnit.TDataArray,ref@System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TPhastDelegate.BoundaryType()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TPhastDelegate.AssignValuesToTopDataSet(AbstractGridUnit.TCustomGrid,DataSetUnit.TDataArray,System.Object,GoPhastTypes.TAssignmentLocation)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TPhastDelegate.AssignValuesToSideDataSet(AbstractGridUnit.TCustomGrid,DataSetUnit.TDataArray,System.Object,GoPhastTypes.TAssignmentLocation)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TPhastDelegate.AssignValuesToFrontDataSet(AbstractGridUnit.TCustomGrid,DataSetUnit.TDataArray,System.Object,GoPhastTypes.TAssignmentLocation)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TPhastDelegate.AssignCellValue(Classes.TStringList,DataSetUnit.TDataArray,System.Int32,System.Int32,System.Int32,RbwParser.TRbwParser,System.String,ref@RbwParser.TExpression,System.Object,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TPhastDelegate.AssignRealDataWithPhastInterpolation(DataSetUnit.TDataArray,System.Int32,System.Int32,System.Int32,System.String,PhastDataSets.TInterpValuesItem)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TPhastDelegate.AssignIntegerDataWithPhastInterpolation(DataSetUnit.TDataArray,System.Int32,System.Int32,System.Int32,System.String,PhastDataSets.TInterpValuesItem)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TPhastDelegate.TwoDBoundaryFormula()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TPhastDelegate.ThreeDBoundaryFormula()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TPhastDelegate.PhastBoundaryType()" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TPhastDelegate.FMixtureExpression" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TPhastDelegate.FMixtureCompiler" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TPhastDelegate.FMixtureVariables" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:ScreenObjectUnit.TPhastDelegate:ScreenObjectUnit.TCustomScreenObjectDelegate" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TModflowDataObject">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TModflowDataObject.DataSetFunction" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TModflowDataObject.Compiler" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TModflowDataObject.AlternateDataType" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TModflowDataObject.AlternateName" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TModflowDelegate">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.UpdateSideSegments(AbstractGridUnit.TCustomGrid,GoPhastTypes.TEvaluatedAt)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.UpdateFrontSegments(AbstractGridUnit.TCustomGrid,GoPhastTypes.TEvaluatedAt)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.Create(ScreenObjectUnit.TScreenObject)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.AssignValuesToTopDataSet(AbstractGridUnit.TCustomGrid,DataSetUnit.TDataArray,System.Object,GoPhastTypes.TAssignmentLocation)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.AssignValuesToSideDataSet(AbstractGridUnit.TCustomGrid,DataSetUnit.TDataArray,System.Object,GoPhastTypes.TAssignmentLocation)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.AssignValuesToFrontDataSet(AbstractGridUnit.TCustomGrid,DataSetUnit.TDataArray,System.Object,GoPhastTypes.TAssignmentLocation)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.AssignSelectedCells(AbstractGridUnit.TCustomGrid)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.InitializeExpression(out@RbwParser.TRbwParser,out@System.String,out@RbwParser.TExpression,DataSetUnit.TDataArray,System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.GetTopCellsToAssign(AbstractGridUnit.TCustomGrid,System.String,System.Object,DataSetUnit.TDataArray,ScreenObjectUnit.TCellAssignmentList,GoPhastTypes.TAssignmentLocation)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.GetSideCellsToAssign(AbstractGridUnit.TCustomGrid,System.String,System.Object,DataSetUnit.TDataArray,ScreenObjectUnit.TCellAssignmentList,GoPhastTypes.TAssignmentLocation)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.GetFrontCellsToAssign(AbstractGridUnit.TCustomGrid,System.String,System.Object,DataSetUnit.TDataArray,ScreenObjectUnit.TCellAssignmentList,GoPhastTypes.TAssignmentLocation)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.DataSetUsed(DataSetUnit.TDataArray,ref@System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.GetCellsToAssign(AbstractGridUnit.TCustomGrid,System.String,System.Object,GoPhastTypes.TEvaluatedAt,ScreenObjectUnit.TCellAssignmentList,GoPhastTypes.TAssignmentLocation,GoPhastTypes.TDataSetOrientation)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.UpdateSegments(AbstractGridUnit.TCustomGrid,GoPhastTypes.TEvaluatedAt)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.GetCellOutlines(AbstractGridUnit.TCustomGrid,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.ElevationOk(AbstractGridUnit.TCustomGrid,System.Int32,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.AssignElevations(System.Int32,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.UpdateHorizontalRangeOfCellsToCheck(ref@System.Int32,ref@System.Int32,System.Int32,System.Int32,ScreenObjectUnit.TEdgePoint,ScreenObjectUnit.TEdgePoint)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.AssignValuesToDataSet(AbstractGridUnit.TCustomGrid,DataSetUnit.TDataArray,System.Object,GoPhastTypes.TAssignmentLocation)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.GetPerpendiularLimit(AbstractGridUnit.TCustomGrid)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.IsPointInside(GoPhastTypes.T3DRealPoint,AbstractGridUnit.TCustomGrid,out@System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.CreateSegment(ScreenObjectUnit.TEdgePoint,ScreenObjectUnit.TEdgePoint,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.GetHorizontalIndexFromLocation(System.Real,AbstractGridUnit.TCustomGrid)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.GetRotatedPoints(ref@ScreenObjectUnit.TEdgePointArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.GetHorizontalLimits(AbstractGridUnit.TCustomGrid,ref@System.Int32,ref@System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.GetColOrRow(AbstractGridUnit.TCustomGrid,ScreenObjectUnit.TEdgePoint,System.Real,System.Real)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.GetVerticalLimitsOfGrid(AbstractGridUnit.TCustomGrid,out@System.Real,out@System.Real)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.GetHorizontalLimitsOfGrid(AbstractGridUnit.TCustomGrid,out@System.Real,out@System.Real)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.InCell(System.Int32,System.Int32,ScreenObjectUnit.TEdgePoint,GoPhastTypes.T2DRealPointArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.OutlineVertex(System.Int32,System.Int32,System.Int32,GoPhastTypes.T2DRealPointArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.FindLayerOnEdge(ScreenObjectUnit.TEdgePoint,ScreenObjectUnit.TEdgePoint,ref@ScreenObjectUnit.TEdgePoint,GoPhastTypes.T2DRealPointArray,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.FindIntersectionSurface(System.Int32,System.Int32,System.Int32,ScreenObjectUnit.TEdgePoint,ScreenObjectUnit.TEdgePoint,ref@ScreenObjectUnit.TEdgePoint,GoPhastTypes.T2DRealPointArray,out@System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.CountIntersectPointsOnEdge(System.Int32,System.Int32,System.Int32,FastGEO.TPoint2D,FastGEO.TPoint2D,GoPhastTypes.T2DRealPointArray,out@GoPhastTypes.TRealPointArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.FindLayer(System.Int32,ScreenObjectUnit.TEdgePoint,GoPhastTypes.T2DRealPointArray,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.AssignParallellLimits(AbstractGridUnit.TCustomGrid,out@System.Int32,out@System.Int32,out@System.Int32,out@System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TModflowDelegate.AssignColAndRowIndicies(ref@System.Int32,ref@System.Int32,ref@System.Int32,System.Int32,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:ScreenObjectUnit.TModflowDelegate:ScreenObjectUnit.TCustomScreenObjectDelegate" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TResetProcedure">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.RemoveDataSetSubscriptions(Classes.TList,SubscriptionUnit.TObserver)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.SetFormulaExpression(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.GetFormulaExpression()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.SetUsePHAST_Interpolation(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.SetTime(System.Double)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.SetMixtureFormula(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.SetMixtureExpression(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.SetInterpolationDirection(GoPhastTypes.TInterpolationDirection)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.SetFormula(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.SetDistance2(System.Double)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.SetDistance1(System.Double)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.RemoveMixtureSubscriptions()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.GetUsePHAST_Interpolation()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.GetScreenObject()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.GetMixtureFormula()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.GetInterpolationDirection()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.GetDistance2()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.GetDistance1()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.AddMixtureSubscriptions()" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.FFormulaObject" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.FFormulaObserver" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.FTime" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.FMixtureObserver" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.FMixtureFormula" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.FFormulaDataSetList" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.FMixtureDataSetList" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.FFormula" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.UsePHAST_Interpolation[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.Time[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.MixtureFormula[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.InterpolationDirection[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.Formula[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.Expression[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.Distance2[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.Distance1[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.DataType[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.FormulaExpression[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.ScreenObject[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.MixtureExpression[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.GetDataSet()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.Create(Classes.TCollection)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.Assign(Classes.TPersistent)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.InvalidateModel()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.UpdateFormulaExpression()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.UpdateMixtureExpression()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.ResetMixtureSubscription()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.GetDatatype()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.ResetFormulaExpression(RbwParser.TRbwParser)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.ResetMixtureFormula(RbwParser.TRbwParser)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.RestoreSubscription(System.Object,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.RemoveSubscription(System.Object,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.AddFormulaSubscriptions()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.RemoveFormulaSubscriptions()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCondition.AddDataSetSubscriptions(Classes.TList,SubscriptionUnit.TObserver,ScreenObjectUnit.TResetProcedure,System.String)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TRealPhastBoundaryCondition">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TRealPhastBoundaryCondition.GetValue1()" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TRealPhastBoundaryCondition.Value2[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TRealPhastBoundaryCondition.Value1[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TRealPhastBoundaryCondition.GetDatatype()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TRealPhastBoundaryCondition.SetValue2(System.Double)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TRealPhastBoundaryCondition.SetValue1(System.Double)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TRealPhastBoundaryCondition.GetValue2()" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:ScreenObjectUnit.TRealPhastBoundaryCondition:ScreenObjectUnit.TCustomPhastBoundaryCondition" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TIntegerPhastBoundaryCondition">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TIntegerPhastBoundaryCondition.Value2[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TIntegerPhastBoundaryCondition.Value1[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TIntegerPhastBoundaryCondition.GetDatatype()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TIntegerPhastBoundaryCondition.SetValue2(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TIntegerPhastBoundaryCondition.SetValue1(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TIntegerPhastBoundaryCondition.GetValue2()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TIntegerPhastBoundaryCondition.GetValue1()" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:ScreenObjectUnit.TIntegerPhastBoundaryCondition:ScreenObjectUnit.TCustomPhastBoundaryCondition" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TMultiValueScreenObject">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TMultiValueScreenObject.FIntegerValues" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TMultiValueScreenObject.RealValues[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TMultiValueScreenObject.IntegerValues[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TMultiValueScreenObject.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TMultiValueScreenObject.Create(Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TMultiValueScreenObject.Assign(Classes.TPersistent)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TMultiValueScreenObject.SetRealValues(ScreenObjectUnit.TRealDataListCollection)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TMultiValueScreenObject.SetIntegerValues(ScreenObjectUnit.TIntegerDataListCollection)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TMultiValueScreenObject.FRealValues" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TMultiValueScreenObject.FRealValues" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TMultiValueScreenObject.FIntegerValues" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:ScreenObjectUnit.TMultiValueScreenObject:ScreenObjectUnit.TScreenObject" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TScreenObjectCollection">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObjectCollection.Create(Classes.TComponent)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObjectCollection.FModel" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObjectCollection.UpdateScreenObjects()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TScreenObjectClipboard">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TScreenObjectClipboard.ScreenObjects[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObjectClipboard.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObjectClipboard.Create(Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObjectClipboard.SetScreenObjects(ScreenObjectUnit.TScreenObjectCollection)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TScreenObjectClipboard.FScreenObjects" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TScreenObjectClipboard.UpdateModel(Classes.TComponent)" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TScreenObjectClipboard.FScreenObjects" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TSegmentDirection">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TSegmentDirection.sdUpRight" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TSegmentDirection.sdDown" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TSegmentDirection.sdDownLeft" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TSegmentDirection.sdDownRight" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TSegmentDirection.sdUp" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TSegmentDirection.sdUpLeft" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.@unitclass">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.GlobalRestorePhastBoundarySubscription(System.Object,System.Object,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.GlobalRemovePhastBoundarySubscription(System.Object,System.Object,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.ResetScreenObjectMixtureFunction(System.Int32,ScreenObjectUnit.TScreenObject,RbwParser.TRbwParser,RbwParser.TRbwDataType,System.String,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.GlobalRestoreLowerElevationSubscription(System.Object,System.Object,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.GlobalRemoveLowerElevationSubscription(System.Object,System.Object,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.GlobalRestoreHigherElevationSubscription(System.Object,System.Object,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.GlobalRemoveHigherElevationSubscription(System.Object,System.Object,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.GlobalRestoreElevationSubscription(System.Object,System.Object,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.GlobalRemoveElevationSubscription(System.Object,System.Object,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.GlobalRestoreBoundaryDataArraySubscription(System.Object,System.Object,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.GlobalRemoveBoundaryDataArraySubscription(System.Object,System.Object,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.GlobalRestoreDataArraySubscription(System.Object,System.Object,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.GlobalRemoveScreenObjectDataArraySubscription(System.Object,System.Object,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.InitializeUsedDataSets(PhastModelUnit.TPhastModel,RbwParser.TRbwParser,RbwParser.TExpression,Classes.TList,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.UpdateUsedVariables(Classes.TList,Classes.TList,System.Int32,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.XIntersection(ScreenObjectUnit.TEdgePoint,ScreenObjectUnit.TEdgePoint,System.Real)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.YIntersection(FastGEO.TPoint2D,FastGEO.TPoint2D,System.Real)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.YIntersection(ScreenObjectUnit.TEdgePoint,ScreenObjectUnit.TEdgePoint,System.Real)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.MidPoint(ScreenObjectUnit.TEdgePoint,ScreenObjectUnit.TEdgePoint)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.Distance(ScreenObjectUnit.TEdgePoint,ScreenObjectUnit.TEdgePoint)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.SortEdgePointsLeftDown(System.Pointer,System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.SortEdgePointsLeftUp(System.Pointer,System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.SortEdgePointsRightDown(System.Pointer,System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.SortEdgePointsRightUp(System.Pointer,System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.SortByEdgePostion(ScreenObjectUnit.TEdgePoint,ScreenObjectUnit.TEdgePoint)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.SortPointsLeftDown(System.Pointer,System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.SortPointsLeftUp(System.Pointer,System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.SortPointsRightDown(System.Pointer,System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.SortPointsRightUp(System.Pointer,System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.IsValueInside(System.Real,System.Real,System.Real)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.ResetScreenObjectFunction(System.Int32,ScreenObjectUnit.TScreenObject,RbwParser.TRbwParser,RbwParser.TRbwDataType,System.String,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.ScreenObjectCompare(System.Pointer,System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.GetLayerFromZ(System.Double,ref@ModflowCellUnit.TCellLocation,ModflowGridUnit.TModflowGrid,System.Object)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.MaxPointsInSubPolygon" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.SquareSize" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.StrInvalidScreenObjec" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.ObjectPrefix" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.FindIntersectionPoints(ScreenObjectUnit.TSubPolygon,ScreenObjectUnit.TSubPolygon,ref@ScreenObjectUnit.TIntersectionArray,ref@System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.SelectAScreenObject(ScreenObjectUnit.TScreenObject)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TWhichElevation">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TWhichElevation.weLower" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TWhichElevation.weHigher" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.EScreenObjectError">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TEdgePosition">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TEdgePosition.epLast" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TEdgePosition.epMiddle" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TEdgePosition.epFirst" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TEdgePoint">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TEdgePoint.Y" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TEdgePoint.X" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TEdgePoint.Position" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TEdgePoint.Position" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TLineSegment">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TLineSegment.Point2" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TLineSegment.Point1" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TLineSegment.IsNextSegment(ScreenObjectUnit.TLineSegment)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TSelectedCells">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TSelectedCells.Clear()" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TSelectedCells.HasCells[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TSelectedCells.Selected[System.Int32,System.Int32,System.Int32]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TSelectedCells.SetExtents(System.Int32,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TSelectedCells.GetHasCells()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TSelectedCells.ValidateIndicies(System.Int32,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TSelectedCells.SetSelected(System.Int32,System.Int32,System.Int32,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TSelectedCells.GetSelected(System.Int32,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TSelectedCells.FSelected" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TSelectedCells.FColCount" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TSelectedCells.FRowCount" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TSelectedCells.FLayerCount" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TCellElementSegment">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCellElementSegment.SectionIndex[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellElementSegment.SecondPointRealCoord(GoPhastTypes.TViewDirection)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellElementSegment.FirstPointRealCoord(GoPhastTypes.TViewDirection)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCellElementSegment.Y2[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCellElementSegment.Y1[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCellElementSegment.X2[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCellElementSegment.X1[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCellElementSegment.StartPosition[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCellElementSegment.Row[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCellElementSegment.VertexIndex[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellElementSegment.Length()" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCellElementSegment.Layer[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCellElementSegment.EndPosition[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCellElementSegment.Col[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellElementSegment.Restore(ZLib.TDecompressionStream)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellElementSegment.Store(ZLib.TCompressionStream)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellElementSegment.FSectionIndex" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellElementSegment.FY2" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellElementSegment.FY1" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellElementSegment.FX2" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellElementSegment.FX1" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellElementSegment.FStartPosition" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellElementSegment.FRow" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellElementSegment.FVertexIndex" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellElementSegment.FLayer" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellElementSegment.FEndPosition" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellElementSegment.FCol" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TCellElementSegment.FEndPosition" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TCellElementSegment.FStartPosition" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TCellElementLeaf">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellElementLeaf.FX2" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellElementLeaf.FX1" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellElementLeaf.GetCoordinate(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellElementLeaf.Create(ScreenObjectUnit.TCellElementSegment,GoPhastTypes.TViewDirection)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellElementLeaf.FSegment" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellElementLeaf.FY2" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellElementLeaf.FY1" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TCellElementLeaf.FSegment" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TCellElementLeafList">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellElementLeafList.Create()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellElementLeafList.CoordinateCount()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TIntersectEdge">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TIntersectEdge.StartPoint" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TIntersectEdge.Reverse()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TIntersectEdge.Assign(FastGEO.TPoint2D,FastGEO.TPoint2D)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TIntersectEdge.Assign(ScreenObjectUnit.TCellElementSegment)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TIntersectEdge.EndPoint" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TCellElementSegmentList">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellElementSegmentList.ClosestSegment(FastGEO.TPoint2D,System.Double)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellElementSegmentList.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellElementSegmentList.Create(Classes.TComponent,ScreenObjectUnit.TScreenObject)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCellElementSegmentList.Items[System.Int32]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellElementSegmentList.Add(ScreenObjectUnit.TCellElementSegment)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCellElementSegmentList.UpToDate[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellElementSegmentList.CacheData()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellElementSegmentList.RestoreData()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellElementSegmentList.SetUpToDate(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellElementSegmentList.SetSegment(System.Int32,ScreenObjectUnit.TCellElementSegment)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellElementSegmentList.GetSegment(System.Int32)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellElementSegmentList.FRangeTree" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellElementSegmentList.FMinDistance" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellElementSegmentList.FCleared" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellElementSegmentList.FCached" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellElementSegmentList.FTempMemoryStream" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellElementSegmentList.FUpToDate" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellElementSegmentList.FModel" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellElementSegmentList.FScreenObject" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellElementSegmentList.FEndPoints" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellElementSegmentList.FStartPoints" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TCellElementSegmentList.FScreenObject" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TIntersectionLocation">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TIntersectionLocation.New" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TIntersectionLocation.Position" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TIntersection">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TIntersection.Location2" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TIntersection.Location1" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TIntersection.Point" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TIntersection.Location2" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TIntersection.Location1" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TSubPolygon">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TSubPolygon.SectionIndex[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TSubPolygon.BoxIntersect(FastGEO.TPoint2D,FastGEO.TPoint2D,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TSubPolygon.GrowByOne()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TSubPolygon.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TSubPolygon.InternalBoxIntersect(Classes.TList,System.Double,System.Double,System.Double,System.Double)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TSubPolygon.SetMaxAndMinFromSubPolygons()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TSubPolygon.SetMaxAndMinWhenNoSubPolygons(System.Int32,System.Int32,GoPhastTypes.TRealPointArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TSubPolygon.CreateSubPolygons(GoPhastTypes.TRealPointArray,System.Int32,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TSubPolygon.Create(GoPhastTypes.TRealPointArray,System.Int32,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TSubPolygon.FSectionIndex" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TSubPolygon.FPoints" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TSubPolygon.FSubPolygon2" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TSubPolygon.FSubPolygon1" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TSubPolygon.FStart" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TSubPolygon.FMinY" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TSubPolygon.FMinX" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TSubPolygon.FMaxY" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TSubPolygon.FMaxX" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TSubPolygon.FCount" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TSubPolygon.FOriginalCount" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TSubPolygon.FSubPolygon2" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TSubPolygon.FSubPolygon1" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TAssignmentMethod">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TAssignmentMethod.amIntersect" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TAssignmentMethod.amEnclose" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TCellAssignment">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellAssignment.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellAssignment.Create(System.Int32,System.Int32,System.Int32,ScreenObjectUnit.TCellElementSegment,System.Int32,System.String,ScreenObjectUnit.TAssignmentMethod)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCellAssignment.Annotation[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCellAssignment.Section[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCellAssignment.Segment[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCellAssignment.Column[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCellAssignment.Row[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCellAssignment.Layer[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCellAssignment.AssignmentMethod[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellAssignment.CreateFromCell(ScreenObjectUnit.TCellAssignment)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellAssignment.CreateFromStream(ZLib.TDecompressionStream,System.String,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellAssignment.Restore(ZLib.TDecompressionStream,System.String,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellAssignment.Store(ZLib.TCompressionStream)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellAssignment.GetSection()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellAssignment.Assign(ScreenObjectUnit.TCellAssignment)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellAssignment.FColumn" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellAssignment.FRow" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellAssignment.FSection" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellAssignment.FLayer" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellAssignment.FSegment" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellAssignment.FOwnedSegment" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellAssignment.FAssignmentMethod" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellAssignment.FAnnotation" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TCellAssignment.FSegment" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TCellAssignment.FOwnedSegment" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TCellAssignment.FAssignmentMethod" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TCellAssignmentList">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellAssignmentList.Restore(System.String,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellAssignmentList.GetCount()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellAssignmentList.GetItem(System.Int32)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellAssignmentList.FCleared" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellAssignmentList.FMemoryStream" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellAssignmentList.FCached" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCellAssignmentList.FList" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellAssignmentList.Delete(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellAssignmentList.Clear()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellAssignmentList.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellAssignmentList.Create()" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCellAssignmentList.Items[System.Int32]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCellAssignmentList.Count[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellAssignmentList.Cache()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellAssignmentList.Assign(ScreenObjectUnit.TCellAssignmentList,System.String,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCellAssignmentList.Add(ScreenObjectUnit.TCellAssignment)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TCachedCells">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCachedCells.Invalidate()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCachedCells.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCachedCells.UpdateCache(ScreenObjectUnit.TCellAssignmentList,GoPhastTypes.TEvaluatedAt,GoPhastTypes.TDataSetOrientation,GoPhastTypes.TAssignmentLocation)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCachedCells.RestoreFromCache(ScreenObjectUnit.TCellAssignmentList,GoPhastTypes.TEvaluatedAt,GoPhastTypes.TDataSetOrientation,GoPhastTypes.TAssignmentLocation,System.String,System.String)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCachedCells.FAssignmentLocation" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCachedCells.FOrientation" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCachedCells.FEvalAt" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCachedCells.FCachedLists" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TCachedCells.FCachedLists" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TCustomScreenObjectDelegate">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomScreenObjectDelegate.DataSetUsed(DataSetUnit.TDataArray,ref@System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomScreenObjectDelegate.BoundaryType()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomScreenObjectDelegate.AssignCellValue(Classes.TStringList,DataSetUnit.TDataArray,System.Int32,System.Int32,System.Int32,RbwParser.TRbwParser,System.String,ref@RbwParser.TExpression,System.Object,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomScreenObjectDelegate.GetTopCellsToAssign(AbstractGridUnit.TCustomGrid,System.String,System.Object,DataSetUnit.TDataArray,ScreenObjectUnit.TCellAssignmentList,GoPhastTypes.TAssignmentLocation)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomScreenObjectDelegate.GetSideCellsToAssign(AbstractGridUnit.TCustomGrid,System.String,System.Object,DataSetUnit.TDataArray,ScreenObjectUnit.TCellAssignmentList,GoPhastTypes.TAssignmentLocation)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomScreenObjectDelegate.GetFrontCellsToAssign(AbstractGridUnit.TCustomGrid,System.String,System.Object,DataSetUnit.TDataArray,ScreenObjectUnit.TCellAssignmentList,GoPhastTypes.TAssignmentLocation)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomScreenObjectDelegate.GetCompiler(GoPhastTypes.TDataSetOrientation)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomScreenObjectDelegate.UpdateSideSegments(AbstractGridUnit.TCustomGrid,GoPhastTypes.TEvaluatedAt)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomScreenObjectDelegate.UpdateFrontSegments(AbstractGridUnit.TCustomGrid,GoPhastTypes.TEvaluatedAt)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomScreenObjectDelegate.AssignValuesToTopDataSet(AbstractGridUnit.TCustomGrid,DataSetUnit.TDataArray,System.Object,GoPhastTypes.TAssignmentLocation)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomScreenObjectDelegate.AssignValuesToSideDataSet(AbstractGridUnit.TCustomGrid,DataSetUnit.TDataArray,System.Object,GoPhastTypes.TAssignmentLocation)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomScreenObjectDelegate.AssignValuesToFrontDataSet(AbstractGridUnit.TCustomGrid,DataSetUnit.TDataArray,System.Object,GoPhastTypes.TAssignmentLocation)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCustomScreenObjectDelegate.FScreenObject" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCustomScreenObjectDelegate.FModel" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCustomScreenObjectDelegate.FModelSelection" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCustomScreenObjectDelegate.FSelectedCells" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomScreenObjectDelegate.AssignSelectedCells(AbstractGridUnit.TCustomGrid)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCustomScreenObjectDelegate.SelectedCells[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCustomScreenObjectDelegate.ModelSelection[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomScreenObjectDelegate.Create(ScreenObjectUnit.TScreenObject)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomScreenObjectDelegate.UpdateVariables(Classes.TStringList,DataSetUnit.TDataArray,System.Int32,System.Int32,System.Int32,RbwParser.TRbwParser)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomScreenObjectDelegate.OtherIndex(System.Int32,System.Int32,out@System.Int32,out@System.Int32,DataSetUnit.TDataArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomScreenObjectDelegate.IntersectAnnotation(System.String,System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomScreenObjectDelegate.InitializeVariables(Classes.TStringList,DataSetUnit.TDataArray,RbwParser.TExpression,RbwParser.TRbwParser)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomScreenObjectDelegate.InitializeExpression(out@RbwParser.TRbwParser,out@System.String,out@RbwParser.TExpression,DataSetUnit.TDataArray,System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomScreenObjectDelegate.EncloseAnnotation(System.String,System.Object)" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TCustomScreenObjectDelegate.FSelectedCells" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TCustomScreenObjectDelegate.FScreenObject" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TCustomScreenObjectDelegateClass">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TDelegateItem">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TDelegateItem.Delegate[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TDelegateItem.DelegateClass[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TDelegateItem.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TDelegateItem.ScreenObject()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TDelegateItem.SetDelegateClass(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TDelegateItem.SetDelegate(ScreenObjectUnit.TCustomScreenObjectDelegate)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TDelegateItem.GetDelegateClass()" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TDelegateItem.FDelegate" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TDelegateItem.FDelegate" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TDelegateCollection">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TDelegateCollection.Delegate(GoPhastTypes.TModelSelection)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TDelegateCollection.Create(ScreenObjectUnit.TScreenObject)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TDelegateCollection.FCachedDelegate" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TDelegateCollection.FOwnerScreenObject" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TDelegateCollection.FCachedDelegate" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TDelegateCollection.FOwnerScreenObject" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCollection">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCollection.TimeList[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCollection.GetDatatype()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCollection.SetTimeList(PhastDataSets.TPhastTimeList)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCollection.FTimeList" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCollection.FScreenObject" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCollection.ScreenObject[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCollection.GetDataSet(System.Double)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCollection.Clear()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCollection.UpdateFormulaExpression()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCollection.UpdateMixtureExpression()" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundaryCollection.FScreenObject" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TRealPhastBoundaries">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TRealPhastBoundaries.GetDatatype()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TRealPhastBoundaries.Create(Classes.TComponent)" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:ScreenObjectUnit.TRealPhastBoundaries:ScreenObjectUnit.TCustomPhastBoundaryCollection" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TIntegerPhastBoundaries">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TIntegerPhastBoundaries.Create(Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TIntegerPhastBoundaries.GetDatatype()" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:ScreenObjectUnit.TIntegerPhastBoundaries:ScreenObjectUnit.TCustomPhastBoundaryCollection" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundary">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundary.ScreenObject[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundary.Create(ScreenObjectUnit.TScreenObject,Classes.TComponent)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundary.Model[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundary.UpdateFormulaExpression()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundary.UpdateMixtureExpression()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundary.UpdateBoundaryDataSet(DataSetUnit.TDataArray,ref@System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundary.UpdateBoundaryDataSet(System.String,ref@System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundary.SetScreenObject(ScreenObjectUnit.TScreenObject)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundary.Clear()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundary.InvalidateModel()" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundary.FModel" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundary.SetModel(Classes.TComponent)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundary.FScreenObject" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TCustomPhastBoundary.FScreenObject" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TCustomInterpolatedBoundary">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomInterpolatedBoundary.Assign(Classes.TPersistent)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomInterpolatedBoundary.BoundaryDataSetFormula(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomInterpolatedBoundary.UpdateFormulaExpression()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomInterpolatedBoundary.UpdateMixtureExpression()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomInterpolatedBoundary.SetScreenObject(ScreenObjectUnit.TScreenObject)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomInterpolatedBoundary.SetSolution(ScreenObjectUnit.TIntegerPhastBoundaries)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomInterpolatedBoundary.SetBoundaryValue(ScreenObjectUnit.TRealPhastBoundaries)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCustomInterpolatedBoundary.FSolution" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCustomInterpolatedBoundary.FBoundaryValue" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCustomInterpolatedBoundary.BoundaryValue[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCustomInterpolatedBoundary.Solution[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomInterpolatedBoundary.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomInterpolatedBoundary.Create(ScreenObjectUnit.TScreenObject,Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomInterpolatedBoundary.Clear()" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TCustomInterpolatedBoundary.FSolution" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ScreenObjectUnit.TCustomInterpolatedBoundary.FBoundaryValue" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:ScreenObjectUnit.TCustomInterpolatedBoundary:ScreenObjectUnit.TCustomPhastBoundary" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TCustomOrientedPhastBoundary">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TCustomOrientedPhastBoundary.Orientation[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomOrientedPhastBoundary.Assign(Classes.TPersistent)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomOrientedPhastBoundary.SetScreenObject(ScreenObjectUnit.TScreenObject)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TCustomOrientedPhastBoundary.SetOrientation(GoPhastTypes.TViewDirection)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TCustomOrientedPhastBoundary.FOrientation" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:ScreenObjectUnit.TCustomOrientedPhastBoundary:ScreenObjectUnit.TCustomInterpolatedBoundary" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TFluxBoundary">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TFluxBoundary.Create(ScreenObjectUnit.TScreenObject,Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TFluxBoundary.SetScreenObject(ScreenObjectUnit.TScreenObject)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TFluxBoundary.SetOrientation(GoPhastTypes.TViewDirection)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TFluxBoundary.Flux[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TFluxBoundary.AssociatedSolution[]" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:ScreenObjectUnit.TFluxBoundary:ScreenObjectUnit.TCustomOrientedPhastBoundary" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TLeakyBoundary">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TLeakyBoundary.AssociatedSolution[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TLeakyBoundary.Head[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TLeakyBoundary.Thickness[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TLeakyBoundary.HydraulicConductivity[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TLeakyBoundary.Reset()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TLeakyBoundary.PartialAssign(Classes.TPersistent)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TLeakyBoundary.Create(ScreenObjectUnit.TScreenObject,Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TLeakyBoundary.Assign(Classes.TPersistent)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TLeakyBoundary.Loaded()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TLeakyBoundary.GetThickness()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TLeakyBoundary.SetThickness(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TLeakyBoundary.SetHydraulicConductivity(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TLeakyBoundary.SetOrientation(GoPhastTypes.TViewDirection)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TLeakyBoundary.GetHydraulicConductivity()" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TLeakyBoundary.FThickness" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TLeakyBoundary.FHydraulicConductivity" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:ScreenObjectUnit.TLeakyBoundary:ScreenObjectUnit.TCustomOrientedPhastBoundary" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TRiverBoundary">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TRiverBoundary.SetBedThickness(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TRiverBoundary.SetBedHydraulicConductivity(System.String)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TRiverBoundary.FWidth" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TRiverBoundary.FDescription" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TRiverBoundary.FDepth" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TRiverBoundary.FBedThickness" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TRiverBoundary.FBedHydraulicConductivity" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TRiverBoundary.Head[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TRiverBoundary.AssociatedSolution[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TRiverBoundary.Width[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TRiverBoundary.Description[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TRiverBoundary.Depth[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TRiverBoundary.BedThickness[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ScreenObjectUnit.TRiverBoundary.BedHydraulicConductivity[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TRiverBoundary.PartialAssign(Classes.TPersistent)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TRiverBoundary.IsBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TRiverBoundary.Create(ScreenObjectUnit.TScreenObject,Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TRiverBoundary.Assign(Classes.TPersistent)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TRiverBoundary.Loaded()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TRiverBoundary.GetWidth()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TRiverBoundary.GetDepth()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TRiverBoundary.GetBedThickness()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TRiverBoundary.GetBedHydraulicConductivity()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TRiverBoundary.SetWidth(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TRiverBoundary.SetDescription(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ScreenObjectUnit.TRiverBoundary.SetDepth(System.String)" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:ScreenObjectUnit.TRiverBoundary:ScreenObjectUnit.TCustomInterpolatedBoundary" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ScreenObjectUnit.TSolutionType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TSolutionType.stSpecified" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ScreenObjectUnit.TSolutionType.stAssociated" />
    </reference>
  </view>
</nodeSet>