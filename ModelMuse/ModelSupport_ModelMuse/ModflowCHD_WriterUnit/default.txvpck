<?xml version="1.0" encoding="utf-8"?>
<nodeSet>
  <view uin="n7m4dy0pp0nz86i_v">
    <property name="$defaultDiagram" value="true" />
    <property name="$metaclass" value="Package Diagram" />
    <property name="$name" value="default" />
    <reference referencedUin="delphi:e_class:src:ModelMuse:ModflowCHD_WriterUnit.@unitclass">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ModflowCHD_WriterUnit.TModflowCHD_Writer">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowCHD_WriterUnit.TModflowCHD_Writer.WriteFluxObservationFile(System.String,GoPhastTypes.TObservationPurpose)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowCHD_WriterUnit.TModflowCHD_Writer.WriteFile(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowCHD_WriterUnit.TModflowCHD_Writer.WriteObservationCells(Classes.TList,Classes.TList,ref@RbwParser.TExpression,Classes.TStringList,Classes.TList,ScreenObjectUnit.TScreenObject,FluxObservationUnit.TObservationFactor)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowCHD_WriterUnit.TModflowCHD_Writer.ObservationOutputExtension()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowCHD_WriterUnit.TModflowCHD_Writer.ObservationExtension()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowCHD_WriterUnit.TModflowCHD_Writer.WriteCell(ModflowCellUnit.TValueCell,System.String,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowCHD_WriterUnit.TModflowCHD_Writer.WriteParameterCells(ModflowCellUnit.TValueCellList,System.Int32,System.String,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowCHD_WriterUnit.TModflowCHD_Writer.ParameterType()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowCHD_WriterUnit.TModflowCHD_Writer.Package()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowCHD_WriterUnit.TModflowCHD_Writer.GetBoundary(ScreenObjectUnit.TScreenObject)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowCHD_WriterUnit.TModflowCHD_Writer.Extension()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowCHD_WriterUnit.TModflowCHD_Writer.CellType()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowCHD_WriterUnit.TModflowCHD_Writer.ObservationPackage()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowCHD_WriterUnit.TModflowCHD_Writer.WriteDataSets5To7()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowCHD_WriterUnit.TModflowCHD_Writer.WriteDataSets3And4()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowCHD_WriterUnit.TModflowCHD_Writer.WriteDataSet2()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowCHD_WriterUnit.TModflowCHD_Writer.WriteDataSet1()" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ModflowCHD_WriterUnit.TModflowCHD_Writer.MXL" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ModflowCHD_WriterUnit.TModflowCHD_Writer.NPCHD" />
    </reference>
  </view>
</nodeSet>