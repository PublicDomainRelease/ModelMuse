<?xml version="1.0" encoding="utf-8"?>
<nodeSet>
  <view uin="nklg2nkwpm3f0dl_v">
    <property name="$defaultDiagram" value="true" />
    <property name="$metaclass" value="Package Diagram" />
    <property name="$name" value="default" />
    <reference referencedUin="delphi:e_class:src:ModelMuse:Utilities.@unitclass">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.YesOrNoToBoolean(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.WriteBatchFile(System.String,System.String,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.TrimTrailingBlanks(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.TrimLeadingBlanks(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.TrimLeadingAndTrailingBlanks(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.StrToBoolean(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.RelDirToAbsDir(System.String,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.RelativePath(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.QuoteIfNeeded(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.PosLastNonBlank(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.PathToAbsPath(System.String,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.ParseVersion(System.String,ref@System.String,ref@System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.ParseByBlanks(System.String,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.ParentDir(System.String,ref@System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.MyExtractRelativePath(System.String,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.LongInt2Bool(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.LastPos(System.String,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.IsUNC(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.IsNonBlank(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.GetQuotedString(System.String,ref@System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.GetNextString(Classes.TStringList,ref@System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.GetNextDataString(Classes.TStringList,ref@System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.GetFirstWord(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.FreeFormattedReal(System.Double)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.FortranDecimal(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.ExtractServer(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.ExecuteCommand(System.String,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.ExclTrailingBackslash(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.DirFilToAbsPath(System.String,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.DirectoryIsLocal(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.ComputerName()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.CenterForm(Forms.TForm)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.BuildCommand(System.String,System.String,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:Utilities.BooleanToYesOrNo(System.Boolean)" />
    </reference>
  </view>
</nodeSet>