<?xml version="1.0" encoding="utf-8"?>
<nodeSet>
  <view uin="pxmq4p80ps5r45s_v">
    <property name="$defaultDiagram" value="true" />
    <property name="$metaclass" value="Package Diagram" />
    <property name="$name" value="default" />
    <reference referencedUin="delphi:e_class:src:ModelMuse:IntervalTree.TIntervalDefinition">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:IntervalTree.TIntervalDefinition.OnFindObjectInterval" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:IntervalTree.TIntervalDefinition.UpperBoundary" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:IntervalTree.TIntervalDefinition.LowerBoundary" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:IntervalTree.TIntervalDefinition.OnFindObjectInterval" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:IntervalTree.IIntervalTree">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.IIntervalTree.FindContainingObjects(GoPhastTypes.TOneDRealArray,GoPhastTypes.TOneDRealArray,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.IIntervalTree.Add(System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.IIntervalTree.ArraySize()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:IntervalTree.TRbwIntervalTree">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRbwIntervalTree.FindContainingObjects(GoPhastTypes.TOneDRealArray,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRbwIntervalTree.Add(System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRbwIntervalTree.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRbwIntervalTree.Create(IntervalTree.TIntDefArray)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:IntervalTree.TRbwIntervalTree.FIntervalTree" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:IntervalTree.TRbwIntervalTree.FIntervalTree" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:IntervalTree.TSearchInterval">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:IntervalTree.TSearchInterval.LowerBoundary" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:IntervalTree.TSearchInterval.UpperBoundary" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:IntervalTree.TRangeTreeLeaf">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRangeTreeLeaf.GetCoordinate(System.Int32)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:IntervalTree.TRangeTreeLeaf.FIsLeft" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:IntervalTree.TRangeTreeLeafList">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:IntervalTree.TRangeTreeLeafList.Capacity[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRangeTreeLeafList.Delete(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRangeTreeLeafList.Add(IntervalTree.TRangeTreeLeaf)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRangeTreeLeafList.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRangeTreeLeafList.Create()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRangeTreeLeafList.CoordinateCount()" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:IntervalTree.TRangeTreeLeafList.Items[System.Int32]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:IntervalTree.TRangeTreeLeafList.OwnsObjects[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRangeTreeLeafList.Sort(Classes.TListSortCompare)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRangeTreeLeafList.Pack()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRangeTreeLeafList.SetOwnsObjects(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRangeTreeLeafList.GetOwnsObjects()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRangeTreeLeafList.Last()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRangeTreeLeafList.First()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRangeTreeLeafList.GetCount()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRangeTreeLeafList.SetItem(System.Int32,IntervalTree.TRangeTreeLeaf)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRangeTreeLeafList.SetCapacity(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRangeTreeLeafList.GetItem(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRangeTreeLeafList.GetCapacity()" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:IntervalTree.TRangeTreeLeafList.FList" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:IntervalTree.TRangeTreeLeafList.Count[]" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:IntervalTree.TRangeTreeLeafLists">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRangeTreeLeafLists.GetCapacity()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRangeTreeLeafLists.SetItem(System.Int32,IntervalTree.TRangeTreeLeafList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRangeTreeLeafLists.GetItem(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRangeTreeLeafLists.GetCount()" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:IntervalTree.TRangeTreeLeafLists.FList" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:IntervalTree.TRangeTreeLeafLists.Capacity[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRangeTreeLeafLists.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRangeTreeLeafLists.Create()" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:IntervalTree.TRangeTreeLeafLists.Count[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRangeTreeLeafLists.Add(IntervalTree.TRangeTreeLeafList)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:IntervalTree.TRangeTreeLeafLists.Items[System.Int32]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRangeTreeLeafLists.SetCapacity(System.Int32)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:IntervalTree.TInternalRangeTree">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:IntervalTree.TInternalRangeTree.FCenterTree" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:IntervalTree.TInternalRangeTree.FRightTree" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:IntervalTree.TInternalRangeTree.FLeftTree" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:IntervalTree.TInternalRangeTree.FDepthIndex" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TInternalRangeTree.EnsureLeftRightTrees()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TInternalRangeTree.EnsureCenterTree()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TInternalRangeTree.Search(IntervalTree.TSearchArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TInternalRangeTree.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TInternalRangeTree.Create(IntervalTree.TRbwRangeTree,IntervalTree.TRangeTreeLeafLists,System.Int32)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:IntervalTree.TInternalRangeTree.FBreakCoordinate" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:IntervalTree.TInternalRangeTree.FParentTree" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:IntervalTree.TInternalRangeTree.FLeafLists" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:IntervalTree.TInternalRangeTree.FParentTree" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:IntervalTree.TInternalRangeTree.FLeafLists" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:IntervalTree.TInternalRangeTree.FCenterTree" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:IntervalTree.TInternalRangeTree.FRightTree" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:IntervalTree.TInternalRangeTree.FLeftTree" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:IntervalTree.TRbwRangeTree">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRbwRangeTree.Create(IntervalTree.TRangeTreeLeafList)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:IntervalTree.TRbwRangeTree.FResultList" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:IntervalTree.TRbwRangeTree.FLeafList" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:IntervalTree.TRbwRangeTree.FInternalTree" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRbwRangeTree.Search(IntervalTree.TSearchArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TRbwRangeTree.Destroy()" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:IntervalTree.TRbwRangeTree.FLeafList" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:IntervalTree.TRbwRangeTree.FInternalTree" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:IntervalTree.TIntervalTree">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:IntervalTree.TIntervalTree.FContentsUpperLimit" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:IntervalTree.TIntervalTree.FCenter" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:IntervalTree.TIntervalTree.FCenterList" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:IntervalTree.TIntervalTree.FIntervalDefinitions" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:IntervalTree.TIntervalTree.FCenterTree" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:IntervalTree.TIntervalTree.FRightTree" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:IntervalTree.TIntervalTree.FLeftTree" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TIntervalTree.Create(IntervalTree.TIntDefArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TIntervalTree.FindContainingObjects(GoPhastTypes.TOneDRealArray,GoPhastTypes.TOneDRealArray,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TIntervalTree.Add(System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TIntervalTree.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TIntervalTree.InternalCreate(IntervalTree.TIntDefArray)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TIntervalTree.ArraySize()" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:IntervalTree.TIntervalTree.FFullPoint" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:IntervalTree.TIntervalTree.FContentsLowerLimit" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:IntervalTree.TIntervalTree.FLeftTree" />
      <reference referencedUin="delphi:l_impl:src:ModelMuse:IntervalTree.TIntervalTree:IntervalTree.IIntervalTree" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:IntervalTree.TIntervalTree.FCenterTree" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:IntervalTree.TIntervalTree.FRightTree" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:IntervalTree.TInternalRangeTreeLeafList">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TInternalRangeTreeLeafList.CoordinateCount()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.TInternalRangeTreeLeafList.Create(System.Int32)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:IntervalTree.TInternalRangeTreeLeafList.FMaxDepth" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:IntervalTree.TInternalRangeTreeLeafList:IntervalTree.TRangeTreeLeafList" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:IntervalTree.@unitclass">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:IntervalTree.CompareLeaves(System.Pointer,System.Pointer)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:IntervalTree.GlobalDepth" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:IntervalTree.TIntervalEvent">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:IntervalTree.TCheckObjectEvent">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:IntervalTree.TSearchEvent">
      <property name="$shortcutReference" value="true" />
    </reference>
  </view>
</nodeSet>