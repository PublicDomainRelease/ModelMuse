<?xml version="1.0" encoding="utf-8"?>
<nodeSet>
  <view uin="xykkkyu0qdzdf5n_v">
    <property name="$defaultDiagram" value="true" />
    <property name="$metaclass" value="Package Diagram" />
    <property name="$name" value="default" />
    <reference referencedUin="delphi:e_class:src:ModelMuse:HashTrie.@unitclass">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:HashTrie.CRC32_POLYNOMIAL" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.Stat(HashTrie.THashTrie,ref@System.Int32,ref@System.Int32,ref@System.Int32,ref@System.Int32,ref@HashTrie.TLenStat)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:HashTrie.BucketSize" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:HashTrie.LeafSize" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.BuildCRCTable()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.CalcStrCRC32(System.String)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:HashTrie.Ccitt32Table" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:HashTrie.TLinkedItem">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.TLinkedItem.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.TLinkedItem.Create(System.UInt32,System.UInt32,HashTrie.TLinkedItem)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:HashTrie.TLinkedItem.Next" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:HashTrie.TLinkedItem.Data" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:HashTrie.TLinkedItem.Value" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:HashTrie.TLinkedItem.Next" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:HashTrie.TTraverseProc">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:HashTrie.TTreeItem">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.TTreeItem.Traverse(System.Pointer,System.Pointer,HashTrie.TTraverseProc)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:HashTrie.TTreeItem.Owner" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.TTreeItem.Delete(System.UInt32,System.UInt32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.TTreeItem.AddDown(System.UInt32,System.UInt32,System.UInt32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.TTreeItem.RORN(System.UInt32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.TTreeItem.ROR(System.UInt32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.TTreeItem.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.TTreeItem.Create(HashTrie.THashTrie)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:HashTrie.TTreeItem.Items" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:HashTrie.TTreeItem.Filled" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:HashTrie.TTreeItem.Level" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.TTreeItem.Find(System.UInt32,System.UInt32,ref@System.UInt32)" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:HashTrie.TTreeItem.Owner" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:HashTrie.THashTrie">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.THashTrie.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.THashTrie.Create()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.THashTrie.Traverse(System.Pointer,System.Pointer,HashTrie.TTraverseProc)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.THashTrie.Find(System.UInt32,System.UInt32,ref@System.UInt32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.THashTrie.Delete(System.UInt32,System.UInt32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.THashTrie.AddDown(System.UInt32,System.UInt32,System.UInt32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.THashTrie.CompareValue(System.UInt32,System.UInt32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.THashTrie.DestroyItem(ref@System.UInt32,ref@System.UInt32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.THashTrie.HashValue(System.UInt32)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:HashTrie.THashTrie.Root" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:HashTrie.THashTrie.Root" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:HashTrie.TStrHashTraverseProc">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:HashTrie.TStrHashTraverseMeth">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:HashTrie.TStringHashTrie">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:HashTrie.TStringHashTrie.AutoFreeObjects[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:HashTrie.TStringHashTrie.CaseSensitive[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.TStringHashTrie.Traverse(System.Pointer,HashTrie.TStrHashTraverseMeth)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.TStringHashTrie.Traverse(System.Pointer,HashTrie.TStrHashTraverseProc)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.TStringHashTrie.Find(System.String,ref@System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.TStringHashTrie.Delete(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.TStringHashTrie.Add(System.String,System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.TStringHashTrie.Create()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.TStringHashTrie.TraverseMeth(System.Pointer,System.Pointer,System.UInt32,System.UInt32,ref@System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.TStringHashTrie.TraverseProc(System.Pointer,System.Pointer,System.UInt32,System.UInt32,ref@System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.TStringHashTrie.HashStr(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.TStringHashTrie.CompareValue(System.UInt32,System.UInt32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.TStringHashTrie.DestroyItem(ref@System.UInt32,ref@System.UInt32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:HashTrie.TStringHashTrie.HashValue(System.UInt32)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:HashTrie.TStringHashTrie.FAutoFreeObjects" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:HashTrie.TStringHashTrie.FCaseSensitive" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:HashTrie.TStringHashTrie:HashTrie.THashTrie" />
    </reference>
  </view>
</nodeSet>