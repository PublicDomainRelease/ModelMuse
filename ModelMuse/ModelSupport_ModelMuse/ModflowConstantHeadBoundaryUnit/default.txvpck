<?xml version="1.0" encoding="utf-8"?>
<nodeSet>
  <view uin="5hlqsk3ypaa49ze_v">
    <property name="$defaultDiagram" value="true" />
    <property name="$metaclass" value="Package Diagram" />
    <property name="$name" value="default" />
    <reference referencedUin="delphi:e_class:src:ModelMuse:ModflowConstantHeadBoundaryUnit.@unitclass">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ModflowConstantHeadBoundaryUnit.EndHeadPosition" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ModflowConstantHeadBoundaryUnit.StartHeadPosition" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdRecord">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdRecord.Cell" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdRecord.Cache(ZLib.TCompressionStream)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdRecord.EndAnnotation" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdRecord.StartAnnotation" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdRecord.EndingTime" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdRecord.StartingTime" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdRecord.EndingHead" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdRecord.StartingHead" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdRecord.Restore(ZLib.TDecompressionStream,Classes.TStringList)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdItem">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdItem.CreateFormulaObjects()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdItem.RemoveFormulaObjects()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdItem.GetStartHead()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdItem.GetEndHead()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdItem.SetStartHead(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdItem.SetEndHead(System.String)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdItem.FStartHead" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdItem.FEndHead" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdItem.StartHead[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdItem.EndHead[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdItem.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdItem.Assign(Classes.TPersistent)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdItem.BoundaryFormulaCount()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdItem.InvalidateModel()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdItem.IsSame(OrderedCollectionUnit.TOrderedItem)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdItem.SetBoundaryFormula(System.Int32,System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdItem.GetBoundaryFormula(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdItem.GetPropertyObserver(System.Object,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdItem.AssignObserverEvents(Classes.TCollection)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TCHD_Cell">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TCHD_Cell.GetIntegerAnnotation(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TCHD_Cell.GetRealAnnotation(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TCHD_Cell.GetRealValue(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TCHD_Cell.GetIntegerValue(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TCHD_Cell.GetRow()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TCHD_Cell.GetLayer()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TCHD_Cell.GetColumn()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TCHD_Cell.GetStartingHeadAnnotation()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TCHD_Cell.GetEndingHeadAnnotation()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TCHD_Cell.GetStartingHead()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TCHD_Cell.GetEndingHead()" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TCHD_Cell.StressPeriod" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TCHD_Cell.Values" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TCHD_Cell.EndingHeadAnnotation[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TCHD_Cell.StartingHeadAnnotation[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TCHD_Cell.EndingHead[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TCHD_Cell.StartingHead[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TCHD_Cell.GetSection()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TCHD_Cell.Restore(ZLib.TDecompressionStream,Classes.TStringList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TCHD_Cell.Cache(ZLib.TCompressionStream)" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TCHD_Cell.Values" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdBoundary">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdBoundary.InvalidateDisplay()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdBoundary.GetCellValues(Classes.TList,Classes.TStringList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdBoundary.ModflowParamItemClass()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdBoundary.BoundaryCollectionClass()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdBoundary.AssignCells(ModflowBoundaryUnit.TCustomBoundaryStorage,Classes.TList)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdStorage">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdStorage.ChdArray[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdStorage.Clear()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdStorage.Store(ZLib.TCompressionStream)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdStorage.Restore(ZLib.TDecompressionStream,Classes.TStringList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdStorage.GetChdArray()" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdStorage.FChdArray" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdCollection">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdCollection.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdCollection.Create(ModflowBoundaryUnit.TModflowBoundary,System.Object,System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdCollection.AdjustedFormula(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdCollection.AssignCellList(RbwParser.TExpression,System.Object,ModflowBoundaryUnit.TCustomBoundaryStorage,System.Int32,Classes.TList,Classes.TList)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdCollection.AssignCellLocation(ModflowBoundaryUnit.TCustomBoundaryStorage,System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdCollection.AddSpecificBoundary()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdCollection.ItemClass()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdCollection.SetBoundaryStartAndEndTime(System.Int32,ModflowBoundaryUnit.TCustomModflowBoundaryItem,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdCollection.InvalidateEndData(System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdCollection.InvalidateStartData(System.Object)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdCollection.FEndData" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdCollection.FStartData" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdParamItem">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ModflowConstantHeadBoundaryUnit.TChdParamItem.BoundaryClass()" />
    </reference>
  </view>
</nodeSet>