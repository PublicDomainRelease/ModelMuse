<?xml version="1.0" encoding="utf-8"?>
<nodeSet>
  <view uin="fdo4h6efoibnapf_v">
    <property name="$defaultDiagram" value="true" />
    <property name="$metaclass" value="Package Diagram" />
    <property name="$name" value="default" />
    <reference referencedUin="delphi:e_class:src:ModelMuse:UnitList.TIDListClass">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:UnitList.@unitclass">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.strNoItem" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.strAlreadyInList" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.strDuplicateID" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.strDuplicateName" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.strNotOwned" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.strItemNotFound" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.strInvalidSize" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.strListInUse" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.CMinimumTableSize" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:UnitList.EListException">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:UnitList.TListOption">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TListOption.loRaiseExceptionIfNotFound" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TListOption.loAllowStealingFromOtherList" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TListOption.loReplaceOnCollision" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:UnitList.TBaseItem">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:UnitList.TBaseItem.List[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:UnitList.TBaseItem.Next[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:UnitList.TBaseItem.Previous[]" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TBaseItem.FList" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TBaseItem.FNext" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TBaseItem.FPrev" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:UnitList.TBaseItem.FList" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:UnitList.TBaseItem.FNext" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:UnitList.TBaseItem.FPrev" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:UnitList.TBaseItemComparator">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:UnitList.TBaseItemComparatorEvent">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:UnitList.TBaseList">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TBaseList.Sort(UnitList.TBaseItemComparator,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TBaseList.Sort(UnitList.TBaseItemComparatorEvent,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TBaseList.Clear()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TBaseList.Add(UnitList.TBaseItem)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TBaseList.Remove(UnitList.TBaseItem)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TBaseList.MoveToFront(UnitList.TBaseItem)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:UnitList.TBaseList.Count[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:UnitList.TBaseList.First[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:UnitList.TBaseList.Last[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:UnitList.TBaseList.Options[]" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TBaseList.FCount" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TBaseList.FFirst" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TBaseList.FLast" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TBaseList.FOptions" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TBaseList.FreeItem(UnitList.TBaseItem)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TBaseList.Destroy()" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:UnitList.TBaseList.FFirst" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:UnitList.TBaseList.FLast" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:UnitList.TBaseListClass">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:UnitList.TNameIDItem">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TNameIDItem.FIDNext" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TNameIDItem.FNameNext" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TNameIDItem.FID" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TNameIDItem.FName" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TNameIDItem.FIDHash" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TNameIDItem.FNameHash" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TNameIDItem.SetID(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TNameIDItem.SetName(System.String)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:UnitList.TNameIDItem.ID[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:UnitList.TNameIDItem.Name[]" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:UnitList.TNameIDItem:UnitList.TBaseItem" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:UnitList.TNameIDItem.FIDNext" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:UnitList.TNameIDItem.FNameNext" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:UnitList.TNameIDList">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TNameIDList.FAndMask" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TNameIDList.FGrowSize" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TNameIDList.FShrinkSize" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TNameIDList.FMinimumSize" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TNameIDList.FIDArray" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TNameIDList.FNameArray" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TNameIDList.Resize(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TNameIDList.GetByID(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TNameIDList.GetByName(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TNameIDList.SetMinimumSize(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TNameIDList.HashID(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TNameIDList.HashName(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TNameIDList.Create()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TNameIDList.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TNameIDList.Clear()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TNameIDList.Add(UnitList.TNameIDItem)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TNameIDList.Remove(UnitList.TNameIDItem)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:UnitList.TNameIDList.ByID[System.Int32]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:UnitList.TNameIDList.ByName[System.String]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:UnitList.TNameIDList.MinimumHashTableSize[]" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:UnitList.TNameIDList.FIDArray" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:UnitList.TNameIDList.FNameArray" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:UnitList.TNameIDList:UnitList.TBaseList" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:UnitList.TNameIDListClass">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:UnitList.TNameItem">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TNameItem.FNameNext" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TNameItem.FName" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TNameItem.FNameHash" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TNameItem.SetName(System.String)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:UnitList.TNameItem.Name[]" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:UnitList.TNameItem:UnitList.TBaseItem" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:UnitList.TNameItem.FNameNext" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:UnitList.TNameList">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TNameList.SetMinimumSize(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TNameList.HashName(System.String)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TNameList.Create()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TNameList.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TNameList.Clear()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TNameList.Add(UnitList.TNameItem)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TNameList.Remove(UnitList.TNameItem)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:UnitList.TNameList.ByName[System.String]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:UnitList.TNameList.MinimumHashTableSize[]" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TNameList.FAndMask" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TNameList.FGrowSize" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TNameList.FShrinkSize" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TNameList.FMinimumSize" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TNameList.FNameArray" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TNameList.Resize(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TNameList.GetByName(System.String)" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:UnitList.TNameList:UnitList.TBaseList" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:UnitList.TNameList.FNameArray" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:UnitList.TNameListClass">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:UnitList.TIDItem">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:UnitList.TIDItem.ID[]" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TIDItem.FIDNext" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TIDItem.FID" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TIDItem.FIDHash" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TIDItem.SetID(System.Int32)" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:UnitList.TIDItem:UnitList.TBaseItem" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:UnitList.TIDItem.FIDNext" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:UnitList.TIDList">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TIDList.Resize(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TIDList.GetByID(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TIDList.SetMinimumSize(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TIDList.HashID(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TIDList.Create()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TIDList.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TIDList.Clear()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TIDList.Add(UnitList.TIDItem)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:UnitList.TIDList.Remove(UnitList.TIDItem)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:UnitList.TIDList.ByID[System.Int32]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:UnitList.TIDList.MinimumHashTableSize[]" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TIDList.FAndMask" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TIDList.FGrowSize" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TIDList.FShrinkSize" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TIDList.FMinimumSize" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:UnitList.TIDList.FIDArray" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:UnitList.TIDList.FIDArray" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:UnitList.TIDList:UnitList.TBaseList" />
    </reference>
  </view>
</nodeSet>