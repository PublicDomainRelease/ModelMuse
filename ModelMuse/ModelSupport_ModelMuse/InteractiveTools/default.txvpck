<?xml version="1.0" encoding="utf-8"?>
<nodeSet>
  <view uin="72oqftclo7ivnpk_v">
    <property name="$defaultDiagram" value="true" />
    <property name="$metaclass" value="Package Diagram" />
    <property name="$name" value="default" />
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TCustomSelectScreenObjectTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomSelectScreenObjectTool.DrawSelectionRectangle32(GR32.TBitmap32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomSelectScreenObjectTool.GetOffset(FastGEO.TPoint2D,out@System.Real,out@System.Real)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomSelectScreenObjectTool.MouseDown(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TCustomSelectScreenObjectTool.FStartX" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomSelectScreenObjectTool.MouseMove(System.Object,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TCustomSelectScreenObjectTool.FStartY" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TCustomSelectScreenObjectTool.FMovingScreenObjects" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomSelectScreenObjectTool.MouseUp(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomSelectScreenObjectTool.MoveScreenObjects(System.Int32,System.Int32,Classes.TShiftState)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TCustomSelectScreenObjectTool.FMouseButtonIsDown" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:InteractiveTools.TCustomSelectScreenObjectTool:InteractiveTools.TScreenObjectTool" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TSelectPointTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TSelectPointTool.Activate()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TSelectPointTool.GetCursor()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TSelectPointTool.GetOffset(FastGEO.TPoint2D,out@System.Real,out@System.Real)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TSelectPointTool.GetHint()" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TSelectPointTool.FPointIsSelected" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TSelectPointTool.FindNodeInSelectedScreenObjects(System.Int32,System.Int32,ScreenObjectUnit.TScreenObject)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TSelectPointTool.SelectPointsWithLine(ScreenObjectUnit.TScreenObject,System.Boolean,out@System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TSelectPointTool.SelectPointsOfAllSelectedScreenObjectsWithLine(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TSelectPointTool.SelectPointsOfASelectedScreenObject(System.Int32,System.Int32,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TSelectPointTool.FindSelectedScreenObject(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TSelectPointTool.ShowMovedPoints(GR32.TBitmap32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TSelectPointTool.DrawOnBitMap32(System.Object,GR32.TBitmap32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TSelectPointTool.MouseUp(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TSelectPointTool.MouseMove(System.Object,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TSelectPointTool.MouseDown(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:InteractiveTools.TSelectPointTool:InteractiveTools.TCustomSelectScreenObjectTool" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TSelectScreenObjectTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TSelectScreenObjectTool.FMaxX" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TSelectScreenObjectTool.FShouldDrawSelectionRectangle" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TSelectScreenObjectTool.FDoubleClicked" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:InteractiveTools.TSelectScreenObjectTool.ShouldDrawSelectionRectangle[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TSelectScreenObjectTool.MouseUp(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TSelectScreenObjectTool.MouseMove(System.Object,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TSelectScreenObjectTool.MouseDown(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TSelectScreenObjectTool.DoubleClick(System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TSelectScreenObjectTool.Activate()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TSelectScreenObjectTool.GetHint()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TSelectScreenObjectTool.DrawOnBitMap32(System.Object,GR32.TBitmap32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TSelectScreenObjectTool.ScreenObjectInside(ScreenObjectUnit.TScreenObject)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TSelectScreenObjectTool.FMinY" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TSelectScreenObjectTool.FMaxY" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TSelectScreenObjectTool.FMinX" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:InteractiveTools.TSelectScreenObjectTool:InteractiveTools.TCustomSelectScreenObjectTool" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TScreenPointStorage">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TScreenPointStorage.FVertexIndex" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TScreenPointStorage.FScreenObject" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.@unitclass">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.CreatePointScreenObjectTool" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.LassoTool" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.RotateGridTool" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.DeleteGridBoundaryTool" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.MovingGridBoundaryTool" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.AddGridBoundaryTool" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.PanTool" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.ZoomOutTool" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.ZoomInTool" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.ZoomTool" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.SelectingObjectsWithLine" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.SelectedCellsColor" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.ConvertSidePoint(FastGEO.TPoint2D)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.SelectionWidth" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.AddPointPartTool" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.AddPolygonPartTool" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.AddLinePartTool" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.ColRowLayerSelectorTool" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.SelectScreenObjectTool" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.SelectPointTool" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.InsertPointTool" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.DeleteSegmentTool" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.CreateRectangleScreenObjectTool" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.CreateStraightLineScreenObjectTool" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.CreateLineScreenObjectTool" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:InteractiveTools.CreatePointScreenObjectTool" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:InteractiveTools.LassoTool" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:InteractiveTools.RotateGridTool" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:InteractiveTools.DeleteGridBoundaryTool" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:InteractiveTools.MovingGridBoundaryTool" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:InteractiveTools.AddGridBoundaryTool" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:InteractiveTools.PanTool" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:InteractiveTools.ZoomOutTool" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:InteractiveTools.ZoomInTool" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:InteractiveTools.ZoomTool" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:InteractiveTools.AddPointPartTool" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:InteractiveTools.AddPolygonPartTool" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:InteractiveTools.AddLinePartTool" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:InteractiveTools.ColRowLayerSelectorTool" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:InteractiveTools.SelectScreenObjectTool" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:InteractiveTools.SelectPointTool" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:InteractiveTools.InsertPointTool" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:InteractiveTools.DeleteSegmentTool" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:InteractiveTools.CreateRectangleScreenObjectTool" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:InteractiveTools.CreateStraightLineScreenObjectTool" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:InteractiveTools.CreateLineScreenObjectTool" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TZoomTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TZoomTool.MouseUp(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TZoomTool.MouseDown(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TZoomTool.GetHint()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TZoomTool.GetCursor()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TZoomInTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TZoomInTool.MouseUp(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TZoomInTool.GetHint()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TZoomInTool.GetCursor()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TZoomOutTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TZoomOutTool.MouseUp(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TZoomOutTool.GetHint()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TZoomOutTool.GetCursor()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TPanTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TPanTool.MouseDown(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TPanTool.GetHint()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TPanTool.RightClick(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TPanTool.MouseUp(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TCustomGridTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomGridTool.ShowNewRowOrLayer(GR32.TBitmap32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomGridTool.ShowNewColumnOrRow(GR32.TBitmap32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomGridTool.ShowNewColumnOrLayer(GR32.TBitmap32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomGridTool.IsOnTopRow(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomGridTool.IsOnTopColumn(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomGridTool.IsOnSideRow(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomGridTool.IsOnSideLayer(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomGridTool.IsOnFrontLayer(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomGridTool.IsOnFrontColumn(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomGridTool.IsInsideSelectionWidth(FastGEO.TPoint2D,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomGridTool.DrawColumnRowOrLayer(GoPhastTypes.TViewDirection,GR32.TBitmap32)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TCustomGridCursorTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomGridCursorTool.MouseMove(System.Object,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:InteractiveTools.TCustomGridCursorTool.UseSelectedCursor[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomGridCursorTool.SetTopCursor(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomGridCursorTool.SetSideCursor(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomGridCursorTool.SetFrontCursor(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomGridCursorTool.IsOverTopColumnOrRow(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomGridCursorTool.IsOverSideRowOrLayer(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomGridCursorTool.IsOverFrontColumnOrLayer(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomGridCursorTool.GetSelectedCursor()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomGridCursorTool.GetNonSelectedCursor()" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TCustomGridCursorTool.FUseSelectedCursor" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:InteractiveTools.TCustomGridCursorTool:InteractiveTools.TCustomGridTool" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TAddGridBoundaryTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TAddGridBoundaryTool.MouseUp(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TAddGridBoundaryTool.MouseMove(System.Object,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TAddGridBoundaryTool.Activate()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TAddGridBoundaryTool.DrawOnBitMap32(System.Object,GR32.TBitmap32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TAddGridBoundaryTool.GetCursor()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TAddGridBoundaryTool.AddRowOrLayer(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TAddGridBoundaryTool.AddColumnOrRow(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TAddGridBoundaryTool.AddColumnOrLayer(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:InteractiveTools.TAddGridBoundaryTool:InteractiveTools.TCustomGridTool" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TMovingGridBoundaryTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TMovingGridBoundaryTool.MouseUp(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TMovingGridBoundaryTool.MouseMove(System.Object,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TMovingGridBoundaryTool.MouseDown(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TMovingGridBoundaryTool.Activate()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TMovingGridBoundaryTool.DrawOnBitMap32(System.Object,GR32.TBitmap32)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:InteractiveTools.TMovingGridBoundaryTool.MovingRow[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:InteractiveTools.TMovingGridBoundaryTool.MovingLayer[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:InteractiveTools.TMovingGridBoundaryTool.MovingColumn[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TMovingGridBoundaryTool.MoveRowOrLayer(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TMovingGridBoundaryTool.MoveColumnOrRow(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TMovingGridBoundaryTool.MoveColumnOrLayer(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TMovingGridBoundaryTool.GetSelectedCursor()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TMovingGridBoundaryTool.GetHint()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TMovingGridBoundaryTool.BeginTopMove(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TMovingGridBoundaryTool.BeginSideMove(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TMovingGridBoundaryTool.BeginFrontMove(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TMovingGridBoundaryTool.FRowBeingMoved" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TMovingGridBoundaryTool.FLayerBeingMoved" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TMovingGridBoundaryTool.FCurrentY" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TMovingGridBoundaryTool.FCurrentX" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TMovingGridBoundaryTool.FColumnBeingMoved" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TMovingGridBoundaryTool.SetMovingRow(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TMovingGridBoundaryTool.SetMovingLayer(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TMovingGridBoundaryTool.SetMovingColumn(System.Boolean)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TMovingGridBoundaryTool.FMovingRow" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TMovingGridBoundaryTool.FMovingLayer" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TMovingGridBoundaryTool.FMovingColumn" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TMovingGridBoundaryTool.RightClick(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:InteractiveTools.TMovingGridBoundaryTool:InteractiveTools.TCustomGridCursorTool" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TDeleteGridBoundaryTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TDeleteGridBoundaryTool.MouseUp(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TDeleteGridBoundaryTool.GetSelectedCursor()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TDeleteGridBoundaryTool.GetHint()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TDeleteGridBoundaryTool.DeleteRowOrLayer(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TDeleteGridBoundaryTool.DeleteColumnOrRow(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TDeleteGridBoundaryTool.DeleteColumnOrLayer(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:InteractiveTools.TDeleteGridBoundaryTool:InteractiveTools.TCustomGridCursorTool" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TCustomCellSelectionTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomCellSelectionTool.Activate()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomCellSelectionTool.DrawSelectedTopCells(System.Int32,System.Int32,System.Int32,System.Int32,GR32.TBitmap32,GoPhastTypes.TViewDirection,Graphics.TColor)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomCellSelectionTool.DrawSelectedSideCells(System.Int32,System.Int32,System.Int32,System.Int32,GR32.TBitmap32,GoPhastTypes.TViewDirection,Graphics.TColor)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomCellSelectionTool.DrawSelectedFrontCells(System.Int32,System.Int32,System.Int32,System.Int32,GR32.TBitmap32,GoPhastTypes.TViewDirection,Graphics.TColor)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomCellSelectionTool.GetEvalAt()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TColRowLayerSelectorTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TColRowLayerSelectorTool.Activate()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TColRowLayerSelectorTool.MouseUp(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TColRowLayerSelectorTool.MouseMove(System.Object,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:InteractiveTools.TColRowLayerSelectorTool.NewLayer[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:InteractiveTools.TColRowLayerSelectorTool.NewRow[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:InteractiveTools.TColRowLayerSelectorTool.NewColumn[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TColRowLayerSelectorTool.GetHint()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TColRowLayerSelectorTool.DrawOnBitMap32(System.Object,GR32.TBitmap32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TColRowLayerSelectorTool.DrawASelection(System.Int32,System.Int32,System.Int32,Graphics.TColor,Graphics.TColor,GR32.TBitmap32,GoPhastTypes.TViewDirection)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TColRowLayerSelectorTool.SetNewSelection()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TColRowLayerSelectorTool.GetCellUnderMouse(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TColRowLayerSelectorTool.DrawExistingColRowLayerSelection(GoPhastTypes.TViewDirection,GR32.TBitmap32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TColRowLayerSelectorTool.DrawNewColRowLayerSelection(GoPhastTypes.TViewDirection,GR32.TBitmap32)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TColRowLayerSelectorTool.FShouldDraw" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TColRowLayerSelectorTool.FNewLayer" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TColRowLayerSelectorTool.FNewColumn" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TColRowLayerSelectorTool.FNewRow" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:InteractiveTools.TColRowLayerSelectorTool:InteractiveTools.TCustomCellSelectionTool" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TRotateGridTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:InteractiveTools.TRotateGridTool.StartAngle[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:InteractiveTools.TRotateGridTool.Rotating[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TRotateGridTool.RightClick(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TRotateGridTool.MouseUp(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TRotateGridTool.MouseMove(System.Object,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TRotateGridTool.MouseDown(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TRotateGridTool.Activate()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TRotateGridTool.DrawOnBitMap32(System.Object,GR32.TBitmap32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TRotateGridTool.GridCenter()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TRotateGridTool.DrawRotatedGrid(GR32.TBitmap32)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TRotateGridTool.FStartAngle" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TRotateGridTool.FRotating" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TCustomStoreVerticesTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomStoreVerticesTool.Activate()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomStoreVerticesTool.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomStoreVerticesTool.Create(Classes.TComponent)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:InteractiveTools.TCustomStoreVerticesTool.CurrentScreenObject[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomStoreVerticesTool.GetSnapPoint()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomStoreVerticesTool.StorePointsOfOtherObjects(ScreenObjectUnit.TScreenObject)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TCustomStoreVerticesTool.FStoredPoints" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TCustomStoreVerticesTool.FVisibleVertices" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TCustomStoreVerticesTool.FViewDirection" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TCustomStoreVerticesTool.FShift" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TCustomStoreVerticesTool.FCurrentScreenObject" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomStoreVerticesTool.ClearPoints()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomStoreVerticesTool.FindPointInNearbyScreenObject(Types.TPoint,out@FastGEO.TPoint2D)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TCustomCreateScreenObjectTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomCreateScreenObjectTool.SetDefaultElevationFormulas()" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:InteractiveTools.TCustomCreateScreenObjectTool.CurrentUndo[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomCreateScreenObjectTool.CanAddPoint()" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TCustomCreateScreenObjectTool.FPriorCursorY" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TCustomCreateScreenObjectTool.FPriorCursorX" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TCustomCreateScreenObjectTool.FDoubleClicked" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TCustomCreateScreenObjectTool.FCurrentUndo" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomCreateScreenObjectTool.CanAddPoint32()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomCreateScreenObjectTool.MouseMove(System.Object,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomCreateScreenObjectTool.MouseUp(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomCreateScreenObjectTool.FinishScreenObjects()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomCreateScreenObjectTool.DoubleClick(System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomCreateScreenObjectTool.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomCreateScreenObjectTool.Create(Classes.TComponent)" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:InteractiveTools.TCustomCreateScreenObjectTool:InteractiveTools.TCustomStoreVerticesTool" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TCustomCreateScreenObjectTool32">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomCreateScreenObjectTool32.Activate()" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:InteractiveTools.TCustomCreateScreenObjectTool32:InteractiveTools.TCustomCreateScreenObjectTool" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TCustomEditScreenObjectTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomEditScreenObjectTool.AreScreenObjectsSelected()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomEditScreenObjectTool.SelectScreenObjects(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:InteractiveTools.TCustomEditScreenObjectTool:InteractiveTools.TCustomStoreVerticesTool" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TScreenObjectTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TScreenObjectTool.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TScreenObjectTool.ScreenObjectInside(ScreenObjectUnit.TScreenObject)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TScreenObjectTool.SelectScreenObjectsInGui(System.Boolean)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TScreenObjectTool.FSelectLine" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:InteractiveTools.TScreenObjectTool:InteractiveTools.TCustomEditScreenObjectTool" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TLassoTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TLassoTool.MouseMove(System.Object,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TLassoTool.MouseDown(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TLassoTool.Activate()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TLassoTool.DrawOnBitMap32(System.Object,GR32.TBitmap32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TLassoTool.GetHint()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TLassoTool.ScreenObjectInside(ScreenObjectUnit.TScreenObject)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TLassoTool.MouseUp(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:InteractiveTools.TLassoTool:InteractiveTools.TScreenObjectTool" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TCreatePointScreenObjectTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCreatePointScreenObjectTool.CreatePointScreenObject(System.Int32,System.Int32,Classes.TShiftState)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCreatePointScreenObjectTool.MouseUp(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCreatePointScreenObjectTool.MouseMove(System.Object,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCreatePointScreenObjectTool.GetHint()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCreatePointScreenObjectTool.GetCursor()" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:InteractiveTools.TCreatePointScreenObjectTool:InteractiveTools.TCustomCreateScreenObjectTool" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TCreateLineScreenObjectTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCreateLineScreenObjectTool.MouseUp(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCreateLineScreenObjectTool.MouseMove(System.Object,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCreateLineScreenObjectTool.GetCursor()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCreateLineScreenObjectTool.GetHint()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCreateLineScreenObjectTool.DrawOnBitMap32(System.Object,GR32.TBitmap32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCreateLineScreenObjectTool.ContinueLineScreenObject(System.Int32,System.Int32,Classes.TShiftState)" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:InteractiveTools.TCreateLineScreenObjectTool:InteractiveTools.TCustomCreateScreenObjectTool32" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TCreateStraightLineScreenObjectTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCreateStraightLineScreenObjectTool.MouseUp(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCreateStraightLineScreenObjectTool.MouseMove(System.Object,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCreateStraightLineScreenObjectTool.GetCursor()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCreateStraightLineScreenObjectTool.GetHint()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCreateStraightLineScreenObjectTool.DrawOnBitMap32(System.Object,GR32.TBitmap32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCreateStraightLineScreenObjectTool.GetPointFromCursorPosition(ref@FastGEO.TPoint2D,System.Int32,System.Int32,FastGEO.TPoint2D)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCreateStraightLineScreenObjectTool.ContinueStraightLineScreenObject(System.Int32,System.Int32,Classes.TShiftState)" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:InteractiveTools.TCreateStraightLineScreenObjectTool:InteractiveTools.TCustomCreateScreenObjectTool32" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TCreateRectangleScreenObjectTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCreateRectangleScreenObjectTool.DrawOnBitMap32(System.Object,GR32.TBitmap32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCreateRectangleScreenObjectTool.GetRemaingPointsOnRectangleCorners(FastGEO.TPoint2D,FastGEO.TPoint2D,ref@FastGEO.TPoint2D,ref@FastGEO.TPoint2D)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCreateRectangleScreenObjectTool.ContinueRectangle(System.Int32,System.Int32,Classes.TShiftState)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCreateRectangleScreenObjectTool.MouseUp(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCreateRectangleScreenObjectTool.MouseMove(System.Object,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCreateRectangleScreenObjectTool.GetHint()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCreateRectangleScreenObjectTool.GetCursor()" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:InteractiveTools.TCreateRectangleScreenObjectTool:InteractiveTools.TCustomCreateScreenObjectTool32" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TCustomModifyGeometryTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomModifyGeometryTool.MouseUp(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomModifyGeometryTool.MouseMove(System.Object,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomModifyGeometryTool.MouseDown(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomModifyGeometryTool.SetCursorAtLocation(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomModifyGeometryTool.DoEdit(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomModifyGeometryTool.GetEdge(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:InteractiveTools.TCustomModifyGeometryTool:InteractiveTools.TCustomEditScreenObjectTool" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TDeleteSegmentTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TDeleteSegmentTool.DoEdit(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TDeleteSegmentTool.SetCursorAtLocation(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TDeleteSegmentTool.GetHint()" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:InteractiveTools.TDeleteSegmentTool:InteractiveTools.TCustomModifyGeometryTool" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TInsertPointTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TInsertPointTool.SetCursorAtLocation(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TInsertPointTool.GetHint()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TInsertPointTool.DoEdit(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:InteractiveTools.TInsertPointTool:InteractiveTools.TCustomModifyGeometryTool" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TCustomAddPartTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TCustomAddPartTool.FUndoAddPart" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomAddPartTool.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomAddPartTool.Deactivate()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomAddPartTool.Activate()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomAddPartTool.MouseMove(System.Object,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomAddPartTool.EnsureUndo()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TCustomAddPartTool.SubmitUndo()" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:InteractiveTools.TCustomAddPartTool:InteractiveTools.TCustomEditScreenObjectTool" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TAddLinePartTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TAddLinePartTool.DoubleClick(System.Object)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TAddLinePartTool.Activate()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TAddLinePartTool.FinishSection()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TAddLinePartTool.GetCursor()" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TAddLinePartTool.FDoubleClicked" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:InteractiveTools.TAddLinePartTool.FNewPart" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TAddLinePartTool.MouseUp(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:InteractiveTools.TAddLinePartTool:InteractiveTools.TCustomAddPartTool" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TAddPolygonPartTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TAddPolygonPartTool.GetCursor()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TAddPolygonPartTool.FinishSection()" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:InteractiveTools.TAddPolygonPartTool:InteractiveTools.TAddLinePartTool" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:InteractiveTools.TAddPointPartTool">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TAddPointPartTool.MouseUp(System.Object,Controls.TMouseButton,Classes.TShiftState,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:InteractiveTools.TAddPointPartTool.GetCursor()" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:InteractiveTools.TAddPointPartTool:InteractiveTools.TCustomAddPartTool" />
    </reference>
  </view>
</nodeSet>