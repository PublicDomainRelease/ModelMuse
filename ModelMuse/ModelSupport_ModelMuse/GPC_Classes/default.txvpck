<?xml version="1.0" encoding="utf-8"?>
<nodeSet>
  <view uin="ruk04ejcq6h83tg_v">
    <property name="$defaultDiagram" value="true" />
    <property name="$metaclass" value="Package Diagram" />
    <property name="$name" value="default" />
    <reference referencedUin="delphi:e_class:src:ModelMuse:GPC_Classes.TGpcPolygonClass">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:GPC_Classes.TGpcPolygonClass.TotalVertexCount()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:GPC_Classes.TGpcPolygonClass.AddContour(gpc.Tgpc_vertex_list,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:GPC_Classes.TGpcPolygonClass.ContourArea(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:GPC_Classes.TGpcPolygonClass.WriteToFile(System.String,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:GPC_Classes.TGpcPolygonClass.ReadFromFile(System.String,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:GPC_Classes.TGpcPolygonClass.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:GPC_Classes.TGpcPolygonClass.CreateFromOperation(gpc.Tgpc_op,GPC_Classes.TGpcPolygonClass,GPC_Classes.TGpcPolygonClass)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:GPC_Classes.TGpcPolygonClass.Create()" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:GPC_Classes.TGpcPolygonClass.Vertices[System.Int32,System.Int32]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:GPC_Classes.TGpcPolygonClass.VertexCount[System.Int32]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:GPC_Classes.TGpcPolygonClass.Holes[System.Int32]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:GPC_Classes.TGpcPolygonClass.Contours[System.Int32]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:GPC_Classes.TGpcPolygonClass.NumberOfContours[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:GPC_Classes.TGpcPolygonClass.SetVertices(System.Int32,System.Int32,gpc.Tgpc_vertex)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:GPC_Classes.TGpcPolygonClass.SetVertexCount(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:GPC_Classes.TGpcPolygonClass.SetNumberOfContours(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:GPC_Classes.TGpcPolygonClass.SetHoles(System.Int32,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:GPC_Classes.TGpcPolygonClass.SetContours(System.Int32,gpc.Tgpc_vertex_list)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:GPC_Classes.TGpcPolygonClass.GetVertices(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:GPC_Classes.TGpcPolygonClass.GetVertexCount(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:GPC_Classes.TGpcPolygonClass.GetNumberOfContours()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:GPC_Classes.TGpcPolygonClass.GetHoles(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:GPC_Classes.TGpcPolygonClass.GetContours(System.Int32)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:GPC_Classes.TGpcPolygonClass.FPolygon" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:GPC_Classes.TGpcTristripClass">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:GPC_Classes.TGpcTristripClass.CreateFromOperation(GPC_Classes.TGpcPolygonClass,GPC_Classes.TGpcPolygonClass,gpc.Tgpc_op)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:GPC_Classes.TGpcTristripClass.Create(GPC_Classes.TGpcPolygonClass)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:GPC_Classes.TGpcTristripClass.Vertices[System.Int32,System.Int32]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:GPC_Classes.TGpcTristripClass.NumberOfVerticies[System.Int32]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:GPC_Classes.TGpcTristripClass.Tristrips[System.Int32]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:GPC_Classes.TGpcTristripClass.NumberOfStrips[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:GPC_Classes.TGpcTristripClass.GetVertices(System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:GPC_Classes.TGpcTristripClass.GetTristrips(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:GPC_Classes.TGpcTristripClass.GetNumberOfVerticies(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:GPC_Classes.TGpcTristripClass.GetNumberOfStrips()" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:GPC_Classes.TGpcTristripClass.FTristrip" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:GPC_Classes.TGpcTristripClass.Destroy()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:GPC_Classes.@unitclass">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:GPC_Classes.MALLOC(ref@System.Pointer,System.Int32,System.String)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:GPC_Classes.EGpcException">
      <property name="$shortcutReference" value="true" />
    </reference>
  </view>
</nodeSet>