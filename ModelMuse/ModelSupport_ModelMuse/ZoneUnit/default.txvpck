<?xml version="1.0" encoding="utf-8"?>
<nodeSet>
  <view uin="ubn2vv80p9b8d5l_v">
    <property name="$defaultDiagram" value="true" />
    <property name="$metaclass" value="Package Diagram" />
    <property name="$name" value="default" />
    <reference referencedUin="delphi:e_class:src:ModelMuse:ZoneUnit.TZoneClass">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ZoneUnit.TCustomDataSets">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ZoneUnit.TCustomDataSets.FZoneClass" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ZoneUnit.TCustomDataSets.FEvalAt" />
      <reference referencedUin="delphi:l_ast:src:ModelMuse:ZoneUnit.TCustomDataSets.FZoneClass" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ZoneUnit.TCustomPhastZone">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TCustomPhastZone.WriteZone(Classes.TStringStream)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ZoneUnit.TCustomPhastZone.MergedZ[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ZoneUnit.TCustomPhastZone.MergedY[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ZoneUnit.TCustomPhastZone.MergedX[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TCustomPhastZone.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TCustomPhastZone.Create()" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ZoneUnit.TCustomPhastZone.FZ2" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ZoneUnit.TCustomPhastZone.FZ1" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ZoneUnit.TCustomPhastZone.FY2" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ZoneUnit.TCustomPhastZone.FY1" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ZoneUnit.TCustomPhastZone.FX2" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ZoneUnit.TCustomPhastZone.FX1" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TCustomPhastZone.PropertiesAreIdentical(ZoneUnit.TCustomPhastZone)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TCustomPhastZone.AssignProperties(System.Int32,System.Int32,System.Int32,ZoneUnit.TCustomDataSets,System.Boolean,System.Boolean,System.Boolean)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ZoneUnit.TCustomPhastZone.FPropertyList" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ZoneUnit.TCustomPhastZone.FMergedZ" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ZoneUnit.TCustomPhastZone.FMergedY" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ZoneUnit.TCustomPhastZone.FMergedX" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ZoneUnit.TCustomZoneGroup">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TCustomZoneGroup.GetZone(System.Int32)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ZoneUnit.TCustomZoneGroup.MergeInZDirection[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ZoneUnit.TCustomZoneGroup.MergeInYDirection[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ZoneUnit.TCustomZoneGroup.MergeInXDirection[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TCustomZoneGroup.ZoneCount()" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ZoneUnit.TCustomZoneGroup.Zones[System.Int32]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TCustomZoneGroup.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TCustomZoneGroup.Create(ZoneUnit.TCustomDataSets)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TCustomZoneGroup.GetMergeInZDirection()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TCustomZoneGroup.GetMergeInYDirection()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TCustomZoneGroup.GetMergeInXDirection()" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ZoneUnit.TCustomZoneGroup.FFinalZones" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ZoneUnit.TZoneList">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TZoneList.IndexOf(ZoneUnit.TCustomPhastZone)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ZoneUnit.TZoneList.Count[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ZoneUnit.TZoneList.Capacity[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TZoneList.Delete(System.Int32)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ZoneUnit.TZoneList.Items[System.Int32]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TZoneList.Add(ZoneUnit.TCustomPhastZone)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TZoneList.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TZoneList.Create()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TZoneList.GetCount()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TZoneList.GetCapacity()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TZoneList.SetCapacity(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TZoneList.SetItems(System.Int32,ZoneUnit.TCustomPhastZone)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TZoneList.GetItems(System.Int32)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ZoneUnit.TZoneList.FList" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ZoneUnit.@unitclass">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ZoneUnit.TPropertyType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ZoneUnit.TPropertyType.ptBoolean" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ZoneUnit.TPropertyType.ptInteger" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ZoneUnit.TPropertyType.ptReal" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ZoneUnit.TCustomProperty">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TCustomProperty.Destroy()" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ZoneUnit.TCustomProperty.IsValue[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TCustomProperty.Create()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TCustomProperty.IsIdentical(ZoneUnit.TCustomProperty)" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ZoneUnit.TCustomProperty.Interpolation[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ZoneUnit.TCustomProperty.RValue[]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ZoneUnit.TCustomProperty.IValue[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TCustomProperty.DataType()" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ZoneUnit.TCustomProperty.BValue[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TCustomProperty.Assign(DataSetUnit.TDataArray,System.Int32,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ZoneUnit.TCustomProperty.FIsValue" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TCustomProperty.SetRValue(System.Double)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TCustomProperty.SetPhastInterpolationValues(PhastDataSets.TPhastInterpolationValues)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TCustomProperty.SetIValue(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TCustomProperty.SetBValue(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TCustomProperty.GetRValue()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TCustomProperty.GetIValue()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TCustomProperty.GetBValue()" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ZoneUnit.TCustomProperty.FPhastInterpolationValues" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ZoneUnit.TIProperty">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TIProperty.IsIdentical(ZoneUnit.TCustomProperty)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TIProperty.DataType()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TIProperty.Assign(DataSetUnit.TDataArray,System.Int32,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ZoneUnit.TIProperty.FIValue" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TIProperty.GetIValue()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TIProperty.SetIValue(System.Int32)" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:ZoneUnit.TIProperty:ZoneUnit.TCustomProperty" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ZoneUnit.TIPropertyList">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ZoneUnit.TIPropertyList.Items[System.Int32]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ZoneUnit.TIPropertyList.Count[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TIPropertyList.Add(ZoneUnit.TIProperty)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TIPropertyList.GetItem(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TIPropertyList.GetCount()" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ZoneUnit.TIPropertyList.FList" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TIPropertyList.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TIPropertyList.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ZoneUnit.TRProperty">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TRProperty.IsIdentical(ZoneUnit.TCustomProperty)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TRProperty.DataType()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TRProperty.Assign(DataSetUnit.TDataArray,System.Int32,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TRProperty.SetRValue(System.Double)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TRProperty.GetRValue()" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ZoneUnit.TRProperty.FRValue" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:ZoneUnit.TRProperty:ZoneUnit.TCustomProperty" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ZoneUnit.TRPropertyList">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TRPropertyList.Destroy()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TRPropertyList.Create()" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ZoneUnit.TRPropertyList.Items[System.Int32]" />
      <reference referencedUin="delphi:e_property:src:ModelMuse:ZoneUnit.TRPropertyList.Count[]" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TRPropertyList.Add(ZoneUnit.TRProperty)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TRPropertyList.GetItem(System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TRPropertyList.GetCount()" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ZoneUnit.TRPropertyList.FList" />
    </reference>
    <reference referencedUin="delphi:e_class:src:ModelMuse:ZoneUnit.TBProperty">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TBProperty.GetBValue()" />
      <reference referencedUin="delphi:e_field:src:ModelMuse:ZoneUnit.TBProperty.FBValue" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TBProperty.IsIdentical(ZoneUnit.TCustomProperty)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TBProperty.DataType()" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TBProperty.Assign(DataSetUnit.TDataArray,System.Int32,System.Int32,System.Int32)" />
      <reference referencedUin="delphi:e_method:src:ModelMuse:ZoneUnit.TBProperty.SetBValue(System.Boolean)" />
      <reference referencedUin="delphi:l_gnt:src:ModelMuse:ZoneUnit.TBProperty:ZoneUnit.TCustomProperty" />
    </reference>
  </view>
</nodeSet>