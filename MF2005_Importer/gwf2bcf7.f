      MODULE GWFBCFMODULE
       INTEGER, SAVE, POINTER ::IBCFCB,IWDFLG,IWETIT,IHDWET
       REAL, SAVE, POINTER    ::WETFCT
       INTEGER, SAVE,  POINTER,   DIMENSION(:)     ::LAYCON
       INTEGER, SAVE,  POINTER,   DIMENSION(:)     ::LAYAVG
       REAL, SAVE,     POINTER,   DIMENSION(:,:,:) ::HY
       REAL, SAVE,     POINTER,   DIMENSION(:,:,:) ::SC1
       REAL, SAVE,     POINTER,   DIMENSION(:,:,:) ::SC2
       REAL, SAVE,     POINTER,   DIMENSION(:,:,:) ::WETDRY
       REAL, SAVE,     POINTER,   DIMENSION(:,:,:) ::CVWD
       REAL, SAVE,     POINTER,   DIMENSION(:)     ::TRPY
      TYPE GWFBCFTYPE
       INTEGER, POINTER  ::IBCFCB,IWDFLG,IWETIT,IHDWET
       REAL, POINTER     ::WETFCT
       INTEGER,  POINTER,   DIMENSION(:)     ::LAYCON
       INTEGER,  POINTER,   DIMENSION(:)     ::LAYAVG
       REAL,     POINTER,   DIMENSION(:,:,:) ::HY
       REAL,     POINTER,   DIMENSION(:,:,:) ::SC1
       REAL,     POINTER,   DIMENSION(:,:,:) ::SC2
       REAL,     POINTER,   DIMENSION(:,:,:) ::WETDRY
       REAL,     POINTER,   DIMENSION(:,:,:) ::CVWD
       REAL,     POINTER,   DIMENSION(:)     ::TRPY
      END TYPE
      TYPE(GWFBCFTYPE), SAVE  ::GWFBCFDAT(10)
      END MODULE GWFBCFMODULE



      SUBROUTINE GWF2BCF7AR(IN,IGRID)
C     ******************************************************************
C     ALLOCATE ARRAYS AND READ DATA FOR BLOCK-CENTERED FLOW PACKAGE
C     ******************************************************************
C
C        SPECIFICATIONS:
C     ------------------------------------------------------------------
      USE GLOBAL,      ONLY:IOUT,NCOL,NROW,NLAY,ITRSS,LAYHDT,LAYHDS,
     1                      CC,CV,IFREFM
      USE GWFBASMODULE,ONLY:HDRY
      USE GWFBCFMODULE,ONLY:IBCFCB,IWDFLG,IWETIT,IHDWET,WETFCT,
     1                      LAYCON,LAYAVG,HY,SC1,SC2,WETDRY,CVWD,TRPY
C
      CHARACTER*24 ANAME(7)
      CHARACTER*12 AVGNAM(4)
      DATA AVGNAM/'HARMONIC    ','ARITHMETIC  ',
     1            'LOGARITHMIC ','*UNCONFINED*'/
C
      DATA ANAME(1) /'    PRIMARY STORAGE COEF'/
      DATA ANAME(2) /'    TRANSMIS. ALONG ROWS'/
      DATA ANAME(3) /'   HYD. COND. ALONG ROWS'/
      DATA ANAME(4) /'VERT HYD COND /THICKNESS'/
      DATA ANAME(5) /'  SECONDARY STORAGE COEF'/
      DATA ANAME(6) /'COLUMN TO ROW ANISOTROPY'/
      DATA ANAME(7) /'        WETDRY PARAMETER'/
C     ------------------------------------------------------------------
C1------ALLOCATE SCALAR VARIABLES IN FORTRAN MODULE.
      ALLOCATE(IBCFCB,IWDFLG,IWETIT,IHDWET)
      ALLOCATE(WETFCT)
      ALLOCATE(LAYCON(NLAY),LAYAVG(NLAY))
C
C2------IDENTIFY PACKAGE
      WRITE(IOUT,1) IN
    1 FORMAT(1X,/1X,'BCF -- BLOCK-CENTERED FLOW PACKAGE, VERSION 7',
     1', 5/2/2005',/,9X,'INPUT READ FROM UNIT',I3)
C
C3------READ AND PRINT IBCFCB (FLAG FOR PRINTING
C3------OR UNIT# FOR RECORDING CELL-BY-CELL FLOW TERMS), HDRY
C3------(HEAD AT CELLS THAT CONVERT TO DRY), AND WETTING PARAMETERS.
      WRITE(IOUT, *) 'BCF:'
      IF(IFREFM.EQ.0) THEN
         READ(IN,'(I10,F10.0,I10,F10.0,2I10)')
     1              IBCFCB,HDRY,IWDFLG,WETFCT,IWETIT,IHDWET
      ELSE
         READ(IN,*) IBCFCB,HDRY,IWDFLG,WETFCT,IWETIT,IHDWET
      END IF
      WRITE(IOUT, *) 'IBCFCB,HDRY,IWDFLG,WETFCT,IWETIT,IHDWET:'
      WRITE(IOUT, *) IBCFCB,HDRY,IWDFLG,WETFCT,IWETIT,IHDWET
C
C3A-----DETERMINE ISS FROM ITRSS
      IF(ITRSS.EQ.0) THEN
         ISS=1
      ELSE
         ISS=0
      END IF
      WRITE(IOUT, *) 'ISS:'
      WRITE(IOUT, *) ISS
C
C3B-----PRINT VALUES
!      IF(ISS.EQ.0) WRITE(IOUT,3)
!    3 FORMAT(1X,'TRANSIENT SIMULATION')
!      IF(ISS.NE.0) WRITE(IOUT,4)
!    4 FORMAT(1X,'STEADY-STATE SIMULATION')
!      IF(IBCFCB.LT.0) WRITE(IOUT,8)
!    8 FORMAT(1X,'CONSTANT-HEAD CELL-BY-CELL FLOWS WILL BE PRINTED',
!     1     ' WHEN ICBCFL IS NOT 0')
!      IF(IBCFCB.GT.0) WRITE(IOUT,9) IBCFCB
!    9 FORMAT(1X,'CELL-BY-CELL FLOWS WILL BE SAVED ON UNIT',I3)
!      WRITE(IOUT,11) HDRY
!   11 FORMAT(1X,'HEAD AT CELLS THAT CONVERT TO DRY=',G13.5)
!      IF(IWDFLG.NE.0) GO TO 35
!      WRITE(IOUT,12)
!   12 FORMAT(1X,'WETTING CAPABILITY IS NOT ACTIVE')
!      GO TO 50
C
!   35 WRITE(IOUT,36)
!   36 FORMAT(1X,'WETTING CAPABILITY IS ACTIVE')
!      IF(IWETIT.LE.0) IWETIT=1
!      WRITE(IOUT,37)WETFCT,IWETIT
!   37 FORMAT(1X,'WETTING FACTOR=',F10.5,
!     1     '     WETTING ITERATION INTERVAL=',I4)
!      WRITE(IOUT,38)IHDWET
!   38 FORMAT(1X,'FLAG THAT SPECIFIES THE EQUATION TO USE FOR HEAD',
!     1    ' AT WETTED CELLS=',I4)
C
C4------READ LAYCON & PRINT TITLE FOR LAYCON TABLE.
   50 IF(IFREFM.EQ.0) THEN
         READ(IN,'(40I2)') (LAYCON(I),I=1,NLAY)
      ELSE
         READ(IN,*) (LAYCON(I),I=1,NLAY)
      END IF
      WRITE(IOUT,*) 'LAYCON(I),I=1,NLAY:'
      WRITE(IOUT,*) (LAYCON(I),I=1,NLAY)
!      WRITE(IOUT,52)
!   52 FORMAT(1X,5X,'LAYER  LAYER-TYPE CODE     INTERBLOCK T',
!     1      /1X,5X,44('-'))
C
C5------LOOP THROUGH LAYERS CALCULATING LAYAVG, PRINTING THE LAYER-TYPE
C5------CODE, AND COUNTING LAYERS THAT NEED TOP & BOT ARRAYS.
      NBOT=0
      NTOP=0
      DO 100 I=1,NLAY
      IF(LAYCON(I).EQ.30 .OR. LAYCON(I).EQ.32) LAYCON(I)=LAYCON(I)-10
      INAM=LAYCON(I)/10
      LAYAVG(I)=INAM*10
      IF(LAYAVG(I).LT.0 .OR. LAYAVG(I).GT.30) THEN
         WRITE(IOUT,53) LAYAVG(I)
   53    FORMAT(1X,'INVALID INTERBLOCK T CODE:',I4)
         CALL USTOP(' ')
      END IF
      LAYCON(I)=LAYCON(I)-LAYAVG(I)
      L=LAYCON(I)
      INAM=INAM+1
!      WRITE(IOUT,55) I,L,LAYAVG(I),AVGNAM(INAM)
!   55 FORMAT(1X,I9,I13,I11,' -- ',A)
      IF(LAYCON(I).LT.0 .OR. LAYCON(I).GT.3) THEN
         WRITE(IOUT,56) LAYCON(I)
   56    FORMAT(1X,'INVALID LAYER TYPE:',I4)
         CALL USTOP(' ')
      END IF
C
C5A-----SET GLOBAL HEAD-DEPENDENT THICKNESS FLAGS.
      IF (L.EQ.0) THEN
        LAYHDT(I)=0
        LAYHDS(I)=0
      ELSEIF (L.EQ.1) THEN
        LAYHDT(I)=1
        LAYHDS(I)=0
      ELSEIF (L.EQ.2) THEN
        LAYHDT(I)=0
        LAYHDS(I)=1
      ELSE
        LAYHDT(I)=1
        LAYHDS(I)=1
      ENDIF
C
C5B-----ONLY THE TOP LAYER CAN BE UNCONFINED(LAYCON=1).
      IF(L.NE.1 .OR. I.EQ.1) GO TO 70
      WRITE(IOUT,57)
   57 FORMAT(1X,/1X,'LAYER TYPE 1 IS ONLY ALLOWED IN TOP LAYER')
      CALL USTOP(' ')
C
C5C-----LAYER TYPES 1 AND 3 NEED A BOTTOM. ADD 1 TO KB.
   70 IF(L.EQ.1 .OR. L.EQ.3) NBOT=NBOT+1
C
C5D-----LAYER TYPES 2 AND 3 NEED A TOP. ADD 1 TO KT.
      IF(L.EQ.2 .OR. L.EQ.3) NTOP=NTOP+1
  100 CONTINUE
C
C6------ALLOCATE SPACE FOR ARRAYS.
      IF(ISS.EQ.0) THEN
         ALLOCATE(SC1(NCOL,NROW,NLAY))
      ELSE
         ALLOCATE(SC1(1,1,1))
      END IF
      IF(NTOP.GT.0 .AND. ISS.EQ.0) THEN
         ALLOCATE(SC2(NCOL,NROW,NTOP))
      ELSE
         ALLOCATE(SC2(1,1,1))
      END IF
      ALLOCATE(TRPY(NLAY))
      IF(NBOT.GT.0) THEN
         ALLOCATE(HY(NCOL,NROW,NBOT))
      ELSE
         ALLOCATE(HY(1,1,1))
      END IF
      IF(IWDFLG.NE.0 .AND. NBOT.GT.0) THEN
         ALLOCATE(WETDRY(NCOL,NROW,NBOT))
      ELSE
         ALLOCATE(WETDRY(1,1,1))
      END IF
      IF(IWDFLG.NE.0 .AND. NLAY.GT.1) THEN
         ALLOCATE(CVWD(NCOL,NROW,NLAY-1))
      ELSE
         ALLOCATE(CVWD(1,1,1))
      END IF
C
C
C7------READ TRPY
      CALL U1DREL(TRPY,ANAME(6),NLAY,IN,IOUT)
C
C8------READ ARRAYS FOR EACH LAYER.
      KT=0
      KB=0
      DO 200 K=1,NLAY
      KK=K
C
C8A-----FIND ADDRESS OF EACH LAYER IN THREE DIMENSION ARRAYS.
      IF(LAYCON(K).EQ.1 .OR. LAYCON(K).EQ.3) KB=KB+1
      IF(LAYCON(K).EQ.2 .OR. LAYCON(K).EQ.3) KT=KT+1
C
C8B-----READ PRIMARY STORAGE COEFFICIENT INTO ARRAY SC1 IF TRANSIENT.
      IF(ISS.EQ.0)CALL U2DREL(SC1(:,:,K),ANAME(1),NROW,NCOL,KK,IN,IOUT)
C
C8C-----READ TRANSMISSIVITY INTO ARRAY CC IF LAYER TYPE IS 0 OR 2.
      IF(LAYCON(K).EQ.3 .OR. LAYCON(K).EQ.1) GO TO 105
      CALL U2DREL(CC(:,:,K),ANAME(2),NROW,NCOL,KK,IN,IOUT)
      GO TO 110
C
C8D-----READ HYDRAULIC CONDUCTIVITY(HY) IF LAYER TYPE IS 1 OR 3.
  105 CALL U2DREL(HY(:,:,KB),ANAME(3),NROW,NCOL,KK,IN,IOUT)
C
C8E-----READ VERTICAL HYCOND/THICK INTO ARRAY CV IF NOT BOTTOM LAYER;
C2E-----MULTIPLIED BY CELL AREA TO CONVERT TO CONDUCTANCE LATER.
  110 IF(K.EQ.NLAY) GO TO 120
      CALL U2DREL(CV(:,:,K),ANAME(4),NROW,NCOL,KK,IN,IOUT)
C
C8F-----READ SECONDARY STORAGE COEFFICIENT INTO ARRAY SC2 IF TRANSIENT
C8F-----AND LAYER TYPE IS 2 OR 3.
  120 IF(LAYCON(K).NE.3 .AND. LAYCON(K).NE.2) GO TO 130
      IF(ISS.EQ.0)CALL U2DREL(SC2(:,:,KT),ANAME(5),NROW,NCOL,KK,IN,IOUT)
C
C8H-----READ WETDRY CODES IF LAYER TYPE IS 1 OR 3 AND WETTING
C8H-----CAPABILITY HAS BEEN INVOKED (IWDFLG NOT 0).
  130 IF(LAYCON(K).NE.3.AND.LAYCON(K).NE.1)GO TO 200
      IF(IWDFLG.EQ.0)GO TO 200
      CALL U2DREL(WETDRY(:,:,KB),ANAME(7),NROW,NCOL,KK,IN,IOUT)
  200 CONTINUE
C
C9------PREPARE AND CHECK BCF DATA.
!      CALL SGWF2BCF7N(ISS)
C
C10-----SAVE POINTERS FOR GRID AND RETURN.
      CALL SGWF2BCF7PSV(IGRID)
      RETURN
      END
!      SUBROUTINE GWF2BCF7AD(KPER,IGRID)
C     ******************************************************************
C     SET HOLD TO BOT WHENEVER A WETTABLE CELL IS DRY
C     ******************************************************************
!      SUBROUTINE GWF2BCF7FM(KITER,KSTP,KPER,IGRID)
C     ******************************************************************
C     ADD LEAKAGE CORRECTION AND STORAGE TO HCOF AND RHS, AND CALCULATE
C     CONDUCTANCE AS REQUIRED
C     ******************************************************************
!      SUBROUTINE GWF2BCF7BDS(KSTP,KPER,IGRID)
C     ******************************************************************
C     COMPUTE STORAGE BUDGET FLOW TERM FOR BCF.
C     ******************************************************************
!      SUBROUTINE GWF2BCF7BDCH(KSTP,KPER,IGRID)
C     ******************************************************************
C     COMPUTE FLOW FROM CONSTANT-HEAD CELLS
C     ******************************************************************
!      SUBROUTINE GWF2BCF7BDADJ(KSTP,KPER,IDIR,IBDRET,
!     1             IC1,IC2,IR1,IR2,IL1,IL2,IGRID)
C     ******************************************************************
C     COMPUTE FLOW BETWEEN ADJACENT CELLS IN A SUBREGION OF THE GRID
C     ******************************************************************
!      SUBROUTINE SGWF2BCF7C(K)
C     ******************************************************************
C     COMPUTE BRANCH CONDUCTANCE USING HARMONIC MEAN OF BLOCK
C     CONDUCTANCES -- BLOCK TRANSMISSIVITY IS IN CC UPON ENTRY
C     ******************************************************************
!      SUBROUTINE SGWF2BCF7H(K,KB,KITER,KSTP,KPER)
C     ******************************************************************
C     COMPUTE CONDUCTANCE FOR ONE LAYER FROM SATURATED THICKNESS AND
C     HYDRAULIC CONDUCTIVITY
C     ******************************************************************
!      SUBROUTINE SGWF2BCF7N(ISS)
C     ******************************************************************
C     INITIALIZE AND CHECK BCF DATA
C     ******************************************************************
!      SUBROUTINE SGWF2BCF7A(K)
C     ******************************************************************
C-------COMPUTE CONDUCTANCE USING ARITHMETIC MEAN TRANSMISSIVITY
C-------ACTIVATED BY LAYAVG=10
C     ******************************************************************
!      SUBROUTINE SGWF2BCF7L(K)
C     ******************************************************************
C-------COMPUTE CONDUCTANCE USING LOGARITHMIC MEAN TRANSMISSIVITY
C-------ACTIVATED BY LAYAVG=20
C     ******************************************************************
!      SUBROUTINE SGWF2BCF7U(K)
C     ******************************************************************
C-------COMPUTE CONDUCTANCE USING ARITHMETIC MEAN SATURATED THICKNESS
C-------AND LOGARITHMIC MEAN HYDRAULIC CONDUCTIVITY
C-------NODE HYDRAULIC CONDUCTIVITY IS IN CC,
C-------NODE SATURATED THICKNESS IS IN BUFF
C-------ACTIVATED BY LAYAVG=30
C     ******************************************************************
      SUBROUTINE GWF2BCF7DA(IGRID)
      USE GWFBCFMODULE
C
      DEALLOCATE(GWFBCFDAT(IGRID)%IBCFCB)
      DEALLOCATE(GWFBCFDAT(IGRID)%IWDFLG)
      DEALLOCATE(GWFBCFDAT(IGRID)%IWETIT)
      DEALLOCATE(GWFBCFDAT(IGRID)%IHDWET)
      DEALLOCATE(GWFBCFDAT(IGRID)%WETFCT)
      DEALLOCATE(GWFBCFDAT(IGRID)%LAYCON)
      DEALLOCATE(GWFBCFDAT(IGRID)%LAYAVG)
      DEALLOCATE(GWFBCFDAT(IGRID)%HY)
      DEALLOCATE(GWFBCFDAT(IGRID)%SC1)
      DEALLOCATE(GWFBCFDAT(IGRID)%SC2)
      DEALLOCATE(GWFBCFDAT(IGRID)%WETDRY)
      DEALLOCATE(GWFBCFDAT(IGRID)%CVWD)
      DEALLOCATE(GWFBCFDAT(IGRID)%TRPY)
C
      RETURN
      END
      SUBROUTINE SGWF2BCF7PNT(IGRID)
      USE GWFBCFMODULE
C
      IBCFCB=>GWFBCFDAT(IGRID)%IBCFCB
      IWDFLG=>GWFBCFDAT(IGRID)%IWDFLG
      IWETIT=>GWFBCFDAT(IGRID)%IWETIT
      IHDWET=>GWFBCFDAT(IGRID)%IHDWET
      WETFCT=>GWFBCFDAT(IGRID)%WETFCT
      LAYCON=>GWFBCFDAT(IGRID)%LAYCON
      LAYAVG=>GWFBCFDAT(IGRID)%LAYAVG
      HY=>GWFBCFDAT(IGRID)%HY
      SC1=>GWFBCFDAT(IGRID)%SC1
      SC2=>GWFBCFDAT(IGRID)%SC2
      WETDRY=>GWFBCFDAT(IGRID)%WETDRY
      CVWD=>GWFBCFDAT(IGRID)%CVWD
      TRPY=>GWFBCFDAT(IGRID)%TRPY
C
      RETURN
      END
      SUBROUTINE SGWF2BCF7PSV(IGRID)
      USE GWFBCFMODULE
C
      GWFBCFDAT(IGRID)%IBCFCB=>IBCFCB
      GWFBCFDAT(IGRID)%IWDFLG=>IWDFLG
      GWFBCFDAT(IGRID)%IWETIT=>IWETIT
      GWFBCFDAT(IGRID)%IHDWET=>IHDWET
      GWFBCFDAT(IGRID)%WETFCT=>WETFCT
      GWFBCFDAT(IGRID)%LAYCON=>LAYCON
      GWFBCFDAT(IGRID)%LAYAVG=>LAYAVG
      GWFBCFDAT(IGRID)%HY=>HY
      GWFBCFDAT(IGRID)%SC1=>SC1
      GWFBCFDAT(IGRID)%SC2=>SC2
      GWFBCFDAT(IGRID)%WETDRY=>WETDRY
      GWFBCFDAT(IGRID)%CVWD=>CVWD
      GWFBCFDAT(IGRID)%TRPY=>TRPY
C
      RETURN
      END
